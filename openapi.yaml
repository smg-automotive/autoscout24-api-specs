openapi: 3.0.3
info:
  contact:
    email: info@autoscout24.ch
    name: AutoScout24 Engineering Team
    url: https://developers.autoscout24.ch
  description: Explore the versatile AutoScout24 REST API for seamless integration.
  title: AutoScout24 API
  version: 1.0.1

servers:
  - url: "https://api.autoscout24.ch"

security:
  - BearerAuth: [ ]

tags:
  - name: Client Authentication
  - name: Listing Search & Exploration
  - name: Message Lead
  - name: Inventory Management
  - name: Configurator
paths:
  /public/v1/clients/oauth/token:
    post:
      operationId: ObtainClientAccessToken
      description: Obtains client access token for the specified grant type, client ID, secret and audience.
      tags:
        - Client Authentication
      security: [ ]
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ObtainClientAccessToken"
        required: true
      responses:
        "200":
          description: Client access token successfully obtained.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObtainClientAccessTokenResponse"
  /public/v1/listings/search:
    post:
      operationId: SearchListings
      description: Returns listings based on the specified query parameters.
      tags:
        - Listing Search & Exploration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListingSearch"
        required: true
      responses:
        "200":
          description: Listings successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingSearchResponse"
  /public/v1/listings/count:
    post:
      operationId: CountListings
      description: Returns the number of listings based on the specified query parameters.
      tags:
        - Listing Search & Exploration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListingCount"
        required: true
      responses:
        "200":
          description: Number of listings successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountResponse"
  /public/v1/listings/facets:
    post:
      operationId: GetFacets
      description: Returns facets based on the specified query parameters.
      tags:
        - Listing Search & Exploration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListingFacets"
        required: true
      responses:
        "200":
          description: Facets successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetsResponse"
  /public/v1/listings/{listingId}:
    get:
      operationId: GetListing
      description: Returns a localized listing for the specified listing ID.
      tags:
        - Listing Search & Exploration
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: "#/components/parameters/languageParam"
      responses:
        "200":
          description: Listing successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingResponse'
  /public/v1/listings/{listingId}/equipment:
    get:
      operationId: GetListingEquipment
      description: Returns localized equipment details for the specified listing ID.
      tags:
        - Listing Search & Exploration
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: "#/components/parameters/languageParam"
      responses:
        "200":
          description: Listing equipment successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingEquipmentResponse'
  /public/v1/sellers/search:
    post:
      operationId: SearchSellers
      description: Returns sellers based on the specified query parameters.
      tags:
        - Listing Search & Exploration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SellerSearch"
        required: true
      responses:
        "200":
          description: Sellers successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SellerSearchResponse"
  /public/v1/sellers/{sellerId}:
    get:
      operationId: GetSeller
      description: Returns seller details for the specified seller ID.
      tags:
        - Listing Search & Exploration
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
      responses:
        "200":
          description: Seller details successfully returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SellerResponse"
  /public/v1/geo-locations:
    get:
      operationId: SearchGeoLocations
      description: Returns geo locations based on the specified query parameters.
      tags:
        - Listing Search & Exploration
      parameters:
        - name: query
          in: query
          description: Text search criteria.
          required: false
          schema:
            type: string
            minLength: 2
            maxLength: 256
            example: zur
        - $ref: "#/components/parameters/languageParam"
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: Geo locations successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoLocationSearchResponse"
  /public/v1/quali-logos/{qualiLogoId}:
    get:
      operationId: GetQualiLogo
      description: Returns a localized Quali Logo for the specified Quali Logo ID.
      tags:
        - Listing Search & Exploration
      parameters:
        - name: qualiLogoId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: "#/components/parameters/languageParam"
      responses:
        "200":
          description: Quali Logo successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QualiLogoResponse"
  /public/v1/listings/{listingId}/message-leads:
    post:
      operationId: CreateMessageLead
      description: Creates a message lead for the specified listing ID.
      tags:
        - Message Lead
      parameters:
        - $ref: '#/components/parameters/listingIdPathParam'
        - name: X-AS24-Source
          description: Source of the message lead.
          in: header
          required: true
          schema:
            type: string
            enum:
              - hci
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageLead"
        required: true
      responses:
        "201":
          description: Message lead successfully created.
          headers:
            Location:
              description: Relative path to the newly created resource.
              schema:
                type: string
  /public/v1/sellers/{sellerId}/listings:
    get:
      operationId: GetSellerListings
      description: Returns listings for the specified seller ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: Seller's listings successfully returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SellerListingPage"
    post:
      operationId: CreateSellerListings
      description: Creates a listing for the specified seller ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SellerListingCreateRequest"
        required: true
      responses:
        "201":
          description: Seller listing successfully created.
  /public/v1/sellers/{sellerId}/listings/{listingId}:
    get:
      operationId: GetSellerListing
      description: Returns listing details for the specified seller ID and listing ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      responses:
        "200":
          description: Listing details successfully returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SellerListing"
    put:
      operationId: UpdateSellerListing
      description: Updates existing listing for the specified seller ID and listing ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SellerListingUpdateRequest"
      responses:
        "204":
          description: Seller listing successfully updated.
    delete:
      operationId: DeleteSellerListing
      description: Deletes listing for the specified seller ID and listing ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      responses:
        "204":
          description: Seller listing successfully deleted.
  /public/v1/sellers/{sellerId}/listings/{listingId}/images:
    get:
      operationId: GetSellerListingImages
      description: Returns images for the specified seller ID and listing ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      responses:
        "200":
          description: Listing images successfully returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SellerListingImagesGetResponse"
    put:
      operationId: SetSellerListingImages
      description: Sets images for the specified seller ID and listing ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SellerListingImagesSetRequest"
        required: true
      responses:
        "204":
          description: Seller listing images successfully set.
  /public/v1/sellers/{sellerId}/listings/{listingId}/images/upload:
    post:
      operationId: UploadSellerListingImage
      description: Uploads single image to the specified seller ID and listing ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerListingImageUploadRequest'
      responses:
        "200":
          description: Seller listing image successfully uploaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingImageKey'
  /public/v1/sellers/{sellerId}/listings/external-id/{externalId}:
    get:
      operationId: GetListingByExternalId
      description: Returns listing for the specified seller ID and external ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/externalIdPathParam'
      responses:
        "200":
          description: Listing details successfully returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SellerListingObject"
  /public/v1/sellers/{sellerId}/listings/seller-vehicle-id/{sellerVehicleId}:
    get:
      operationId: GetListingBySellerVehicleId
      description: Returns listings for the specified seller ID and seller vehicle ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/sellerVehicleIdPathParam'
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: Listing details successfully returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SellerListingDetailsResponse"
  /public/v1/versions/{versionId}:
    get:
      operationId: GetVersion
      description: Returns version details for the specified version ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/versionIdPathParam'
      responses:
        "200":
          description: Version details successfully returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/VersionShared"
  /public/v1/versions/{versionId}/equipment:
    get:
      operationId: GetVersionEquipment
      description: Returns version equipment details for the specified version ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/versionIdPathParam'
        - $ref: "#/components/parameters/languageParam"
        - $ref: '#/components/parameters/productionMonthParam'
        - $ref: '#/components/parameters/productionYearParam'
      responses:
        "200":
          description: Version equipment details successfully returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/VersionEquipmentResponse"
  /public/v1/sellers/{sellerId}/listings/{listingId}/equipment:
    get:
      operationId: GetSellerListingEquipment
      description: Returns localized seller listing equipment for specified seller ID and listing ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
        - $ref: "#/components/parameters/languageParam"
      responses:
        "200":
          description: Seller listing equipment successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerEquipmentResponse'
    put:
      operationId: SetSellerListingEquipment
      description: Sets equipment for the specified seller ID and listing ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SellerListingEquipmentSetRequest"
        required: true
      responses:
        "204":
          description: Seller listing equipment set successfully.
  /public/v1/sellers/{sellerId}/listings/{listingId}/activate:
    post:
      operationId: ActivateSellerListing
      description: Activates listing for the specified seller ID and listing ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      responses:
        "204":
          description: Seller listing successfully activated
  /public/v1/sellers/{sellerId}/listings/{listingId}/deactivate:
    post:
      operationId: DeactivateSellerListing
      description: Deactivates listing for the specified seller ID and listing ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      responses:
        "204":
          description: Seller listing successfully deactivated
  /public/v1/sellers/{sellerId}/listings/{listingId}/remove:
    post:
      operationId: RemoveSellerListing
      description: Removes listing for the specified seller ID and listing ID.
      tags:
        - Inventory Management
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      responses:
        "204":
          description: Seller listing successfully removed
  /public/v1/makes:
    get:
      operationId: GetMakes
      description: Returns a sorted list of makes for the specified vehicle category.
      tags:
        - Listing Search & Exploration
        - Inventory Management
      parameters:
        - $ref: "#/components/parameters/vehicleCategoryQueryParam"
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: List of makes successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MakeResponse"
  /public/v1/makes/key/{makeKey}/models:
    get:
      operationId: GetModels
      description: Returns a sorted list of models for the specified makeKey and vehicle category.
      tags:
        - Listing Search & Exploration
        - Inventory Management
      parameters:
        - name: makeKey
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/vehicleCategoryQueryParam"
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: List of models successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelResponse"
  /public/v1/vehicle-categories:
    get:
      operationId: GetVehicleCategories
      description: Returns a list of available vehicle categories.
      tags:
        - Listing Search & Exploration
        - Inventory Management
      responses:
        "200":
          description: Vehicle categories successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleCategoriesResponse"
  /public/v1/vehicle-energy-efficiency/detect:
    post:
      operationId: GetVehicleEnergyEfficiency
      description: Returns detected vehicle energy efficiency.
      tags:
        - Configurator
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VehicleEnergyEfficiencyRequest"
        required: true
      responses:
        "200":
          description: Vehicle energy efficiency successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleEnergyEfficiencyResponse"
  /public/v1/reference-data:
    get:
      operationId: GetReferenceData
      description: Returns reference data, optionally filtered by vehicle category.
      tags:
        - Listing Search & Exploration
        - Inventory Management
      parameters:
        - name: vehicleCategory
          in: query
          description: Filter reference data by vehicle category.
          required: false
          schema:
            $ref: "#/components/schemas/VehicleCategory"
      responses:
        "200":
          description: Reference data successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferenceDataResponse"
  /public/v1/translations/{language}:
    get:
      operationId: GetTranslations
      description: Returns translations for the specified language.
      tags:
        - Listing Search & Exploration
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Translations successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Translation"
  /public/v1/configurator/eurotax/sellers/{sellerId}/versions/vehicle-identification-number/{vehicleIdentificationNumber}:
    get:
      operationId: GetVersionByVehicleIdentificationNumber
      description: Returns version information for the provided vehicle identification number.
      tags:
        - Configurator
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/vehicleIdentificationNumberPathParam'
      responses:
        "200":
          description: Version successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionVehicleIdentificationNumberResponse'
  /public/v1/configurator/eurotax/sellers/{sellerId}/versions/vehicle-identification-number/{vehicleIdentificationNumber}/equipment:
    get:
      operationId: GetVersionEquipmentByVehicleIdentificationNumber
      description: Returns version equipment information for the provided vehicle identification number.
      tags:
        - Configurator
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/vehicleIdentificationNumberPathParam'
      responses:
        "200":
          description: Version equipment successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleIdentificationNumberEquipmentResponse'
  /public/v1/configurator/eurotax/sellers/{sellerId}/versions/make-key/{makeKey}:
    get:
      operationId: GetVersionsByMakeAndModelKey
      description: Returns a list of versions based on the make and model key.
      tags:
        - Configurator
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/makeKeyPathParam'
        - $ref: '#/components/parameters/modelKeyParam'
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: List of versions successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionBaseListResponse'
  /public/v1/configurator/eurotax/sellers/{sellerId}/versions/certification-number/{certificationNumber}:
    get:
      operationId: GetVersionsByCertificationNumber
      description: Returns a list of versions based on the certification number and production date.
      tags:
        - Configurator
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/certificationNumberPathParam'
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: List of versions successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionBaseListResponse'
  /public/v1/configurator/eurotax/sellers/{sellerId}/versions/external-id/{externalId}:
    get:
      operationId: GetVersionByExternalId
      description: Returns a specific version based on the provided seller ID and external ID (eurotax nat code).
      tags:
        - Configurator
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/externalIdPathParam'
      responses:
        "200":
          description: Version successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
  /public/v1/configurator/eurotax/sellers/{sellerId}/versions/serial-number/{serialNumber}:
    get:
      operationId: GetVersionBySerialNumber
      description: Returns versions for a given serial number and production date.
      tags:
        - Configurator
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/serialNumberPathParam'
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: List of versions successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionBaseListResponse'
  /public/v1/configurator/eurotax/sellers/{sellerId}/listings/{listingId}/equipment:
    put:
      operationId: SetEquipmentWithEurotaxFormat
      description: Sets equipment provided in Eurotax format for the specified seller ID and listing ID.
      tags:
        - Configurator
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EurotaxEquipmentSetRequest"
        required: true
      responses:
        "204":
          description: Seller listing Eurotax equipment set successfully.
  /public/v1/configurator/eurotax-autoscout/sellers/{sellerId}/listings/{listingId}/equipment:
    put:
      operationId: SetEurotaxEquipmentWithAutoscoutFormat
      description: Sets Eurotax equipment provided in Autoscout format for the specified seller ID and listing ID.
      tags:
        - Configurator
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EurotaxAutoscoutEquipmentSetRequest"
        required: true
      responses:
        "204":
          description: Seller listing Eurotax equipment set successfully.
  /public/v1/configurator/autoi/sellers/{sellerId}/listings/{listingId}/equipment:
    put:
      operationId: SetEquipmentWithAutoIFormat
      description: Sets equipment provided in Autoi format for the specified seller ID and listing ID.
      tags:
        - Configurator
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutoIEquipmentSetRequest"
        required: true
      responses:
        "204":
          description: Seller listing Autoi equipment set successfully.
  /public/v1/configurator/autoi-autoscout/sellers/{sellerId}/listings/{listingId}/equipment:
    put:
      operationId: SetAutoIEquipmentWithAutoscoutFormat
      description: Sets Autoi equipment provided in Autoscout format for the specified seller ID and listing ID.
      tags:
        - Configurator
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: '#/components/parameters/listingIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutoIAutoscoutEquipmentSetRequest"
        required: true
      responses:
        "204":
          description: Seller listing Autoi equipment set successfully.
components:
  parameters:
    certificationNumberPathParam:
      in: path
      name: certificationNumber
      description: The certification number.
      required: true
      schema:
        type: string
        pattern: '^\w{6}$'
      example: 1AE899
    externalIdPathParam:
      in: path
      name: externalId
      description: The external ID.
      required: true
      schema:
        type: string
      example: 289D20046226
    languageParam:
      in: query
      name: language
      description: The language in which the response should be returned (defaults to German).
      required: false
      schema:
        $ref: '#/components/schemas/Language'
    listingIdPathParam:
      in: path
      name: listingId
      description: The ID of the listing.
      required: true
      schema:
        type: integer
        format: int64
      example: 1620023
    makeKeyPathParam:
      in: path
      name: makeKey
      description: The make key.
      required: true
      schema:
        type: string
      example: audi
    modelKeyParam:
      in: path
      name: modelKey
      description: The model key.
      required: false
      schema:
        type: string
      example: a6
    pageQueryParam:
      in: query
      name: page
      description: The page number for data retrieval (defaults to 0).
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 999999
        default: 0
      example: 0
    productionMonthParam:
      in: query
      name: productionMonth
      description: The month of the production.
      required: true
      schema:
        type: integer
        format: int16
      example: 5
    productionYearParam:
      in: query
      name: productionYear
      description: The year of the production.
      required: true
      schema:
        type: integer
        format: int16
      example: 2025
    sellerIdPathParam:
      in: path
      name: sellerId
      description: The ID of the seller.
      required: true
      schema:
        type: integer
        format: int64
      example: 601
    sellerVehicleIdPathParam:
      in: path
      name: sellerVehicleId
      description: The ID of the seller vehicle.
      required: true
      schema:
        type: string
      example: A123XYZ
    serialNumberPathParam:
      in: query
      name: serialNumber
      description: The serial number of the vehicle.
      required: true
      schema:
        type: string
        pattern: '^\d{3}\.\d{3}\.\d{3}$'
      example: 123.456.789
    sizeQueryParam:
      in: query
      name: size
      description: The number of records per page (defaults to 20, maximum 2000).
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 2000
        default: 20
      example: 20
    vehicleCategoryQueryParam:
      in: query
      name: vehicleCategory
      description: The vehicle category for which data should be retrieved.
      required: true
      schema:
        $ref: "#/components/schemas/VehicleCategory"
    vehicleIdentificationNumberPathParam:
      in: path
      name: vehicleIdentificationNumber
      description: The vehicle identification number.
      required: true
      schema:
        type: string
        pattern: '^\w{17}$'
      example: W0LPD2EC5CG042448
    versionIdPathParam:
      in: path
      name: versionId
      description: The ID of the version.
      required: true
      schema:
        type: integer
        format: int64
      example: 1923
  schemas:
    AutoIAutoscoutEquipmentSetRequest:
      type: object
      description: Represents the Autoi request structure in Autoscout format for setting the seller listing equipment.
      properties:
        standard:
          type: array
          description: Standard Autoi option.
          items:
            $ref: '#/components/schemas/AutoIOption'
        optional:
          type: array
          description: Optional Autoi option.
          items:
            $ref: '#/components/schemas/AutoIOption'
    AutoIOption:
      type: object
      description: Autoi equipment option.
      properties:
        id:
          type: integer
          description: Autoi equipment option's ID.
        packageItems:
          type: array
          description: Autoi package items names included in the option.
          items:
            type: string
          nullable: true
      example:
        { "id": 423423, "packageItems": [ "forfait-confort", "licht-fernlicht-assistent" ] }
    AutoIEquipment:
      description: Autoi equipment.
      type: object
      properties:
        label:
          description: Autoi equipment name in de, fr and it.
          allOf:
            - $ref: "#/components/schemas/Label"
        price:
          description: Price for the Autoi equipment.
          type: number
          format: double
          minimum: 0.0
          maximum: 9999999.0
          example: 6540.0
          nullable: true
        id:
          description: Autoi option's ID.
          type: number
          format: int64
          example: 1049983
        checked:
          description: Flag that indicates if Autoi option is checked.
          type: boolean
          example: true
        groupId:
          description: Parent Autoi option id for the package item, or null if it's not package item.
          type: number
          format: int64
          example: 4819592
          nullable: true
        isStandard:
          description: Flag that indicates if Autoi option is standard.
          type: boolean
          example: true
    AutoIEquipmentSetRequest:
      description: Represents the Autoi request structure for setting the seller listing equipment.
      type: object
      properties:
        autoIEquipments:
          type: array
          description: List of equipment items provided in Autoi format.
          items:
            $ref: '#/components/schemas/AutoIEquipment'
      required:
        - autoIEquipments
    BodyType:
      type: string
      description: Defines the body type of the vehicle, indicating the general structure and form.
      enum:
        - alcove
        - atv-quad
        - boat-trailer
        - box
        - box-double-cab
        - box-glazed
        - bridge
        - bridge-double-cab
        - bus
        - cab-over
        - cabin
        - cabriolet
        - car
        - caravan
        - car-trailer
        - car-transporter
        - chassis-cab
        - chopper
        - construction-trailer
        - coupe
        - custom-bike
        - e-bike
        - estate
        - horse-trailer
        - integrated
        - livestock-trailer
        - low-bed-trailer
        - minivan
        - moped
        - motocross-bike
        - motorcycle-trailer
        - motorhome
        - naked-bike
        - off-road-bike
        - other
        - pickup
        - platform
        - reefer
        - sales-trailer
        - saloon
        - sanitary-trailer
        - scooter
        - semi-integrated
        - semi-trailer
        - sidecar
        - small-car
        - snowmobile
        - special-vehicles-trailer
        - street-bike
        - suitcase
        - supermoto
        - suv
        - tank-body
        - tipper
        - touring
        - trailer
        - trike
        - uploader
        - wood-transporter
      example: "car"
    ChargingPlugType:
      type: string
      description: The type of charging plug supported by the vehicle for electric vehicles.
      enum:
        - type-1
        - type-2
      example: "type-2"
    Color:
      type: string
      description: The color of the vehicle or its components.
      enum:
        - anthracite
        - beige
        - black
        - blue
        - bordeaux
        - brown
        - gray
        - gold
        - green
        - multicolored
        - orange
        - pink
        - red
        - silver
        - turquoise
        - violet
        - white
        - yellow
        - other
      example: "blue"
    ConditionType:
      type: string
      description: Specifies the condition of the vehicle, whether it's new, used, or other categories.
      enum:
        - new
        - used
        - demonstration
        - oldtimer
        - pre-registered
      example: "new"
    Consumption:
      description: Represents the fuel consumption of the vehicle.
      type: object
      properties:
        combined:
          description: The combined fuel consumption of the vehicle in L/100km.
          type: number
          example: 8.55
      example: { "combined": 8.55 }
    CountResponse:
      description: Represents the response structure for data counting.
      type: object
      properties:
        count:
          description: Number of elements that match the provided search criteria.
          type: integer
          format: int64
          example: 15
    CylinderArrangement:
      type: string
      description: The arrangement of cylinders in the vehicle’s engine.
      enum:
        - inline
        - flat
        - v
        - vr
        - rotary
        - monobloc
        - w
      example: "v"
    DriveSystem:
      type: string
      description: The type of system used to transmit power from the engine to the wheels or other moving parts.
      enum:
        - belt
        - chain
        - shaft
        - direct
      example: "belt"
    DriveType:
      type: string
      description: The type of drive that determines how the vehicle's wheels are powered.
      enum:
        - rear
        - front
        - all
      example: "rear"
    EmissionStandard:
      type: string
      description: The emission standard that the vehicle complies with, indicating the level of pollutants it produces.
      enum:
        - euro-1
        - euro-2
        - euro-3
        - euro-4
        - euro-5
        - euro-5-plus
        - euro-6
        - euro-6a
        - euro-6b
        - euro-6c
        - euro-6d
        - euro-6d-temp
        - euro-6d-temp-evap
        - euro-6d-temp-evap-isc
        - euro-6d-temp-isc
        - euro-6d-isc
        - euro-6d-isc-fcm
        - euro-6e
      example: "euro-6"
    EnergyLabel:
      type: string
      description: The energy efficiency label of the vehicle, indicating how energy-efficient it is.
      enum:
        - a
        - b
        - c
        - d
        - e
        - f
        - g
      example: "a"
    Equipment:
      type: object
      description: Represents an equipment item or package included in the vehicle.
      properties:
        name:
          type: string
          description: The name of the equipment item or package.
          example: "ABS"
        packageItems:
          type: array
          description: A list of equipment items included in the package, if any.
          items:
            $ref: '#/components/schemas/PackageItem'
          nullable: true
      example:
        name: "ABS"
        packageItems:
          - { "name": "ABS Module" }
    EquipmentOption:
      type: object
      description: Represents an equipment item or package included in the vehicle.
      properties:
        id:
          type: integer
          description: Equipment item's ID.
          example: 1502
        name:
          type: string
          description: The name of the equipment item or package.
          example: "Pack Assistenz Tour"
        packageItems:
          type: array
          description: A list of selected equipment keys for a package, if any.
          nullable: true
          items:
            type: string
          example: [ "forfait-confort", "licht-fernlicht-assistent" ]
    EquipmentSearchAttribute:
      type: string
      description: Represents specific equipment features that can be searched for in a vehicle.
      enum:
        - abs
        - active-brake-assistant
        - adaptive-cruise-control
        - adaptive-headlights
        - additional-instrumentation
        - air-condition
        - air-suspension
        - alarm-system
        - alcantara
        - alloy-wheels
        - android-auto
        - anti-theft-device
        - apple-carplay
        - assisted-parking
        - audio-system
        - automatic-air-condition
        - auxiliary-heating
        - backrest
        - blind-spot-system
        - bluetooth-interface
        - 360-camera
        - catalytic-converter
        - chrome-parts
        - cloth-seats
        - cover
        - crash-bar
        - cruise-control
        - custom-exhaust
        - custom-handlebar
        - dab-radio
        - detachable-towbar
        - differential-locking
        - double-disc-brake
        - double-seat
        - electric-seat
        - electric-tailgate
        - esp
        - fast-charging
        - floorboard
        - full-partial-casing
        - hands-free-set
        - hardtop
        - head-up-display
        - heated-grips
        - heated-seats
        - hydraulic-system
        - isofix
        - keyless
        - kitchen
        - lane-assistant
        - laser-headlights
        - leather-seats
        - led
        - liftgate
        - luggage-rack
        - navigation
        - panorama-roof
        - parking-sensor-front
        - parking-sensor-rear
        - partial-leather-seats
        - portable-navigation-system
        - rear-camera
        - reinforced-suspension
        - retarder-intarder
        - retractable-towbar
        - saddlebag
        - shower
        - sliding-door
        - solo-seat
        - speaker
        - special-paint
        - spoked-wheels
        - sport-seats
        - start-stop-system
        - suitcase
        - sunroof
        - tank-bag
        - toilet
        - top-case
        - towbar
        - traction-control
        - tv
        - twin-headlights
        - ventilated-seats
        - windshield
        - wing-doors
        - xenon-headlights
        - electric-windows
      example: "abs"
    EquipmentSearchAttributeGroup:
      type: string
      description: A group of related equipment search attributes for filtering.
      enum:
        - air-condition
        - headlights
        - navigation-system
        - seat-covers
        - towbar
      example: "headlights"
    EurotaxAutoscoutEquipmentSetRequest:
      type: object
      description: Represents the Eurotax request structure in Autoscout format for setting the seller listing equipment.
      properties:
        standard:
          type: array
          description: Standard Eurotax options.
          items:
            $ref: '#/components/schemas/EurotaxAutoscoutOption'
        optional:
          type: array
          description: Optional Eurotax options.
          items:
            $ref: '#/components/schemas/EurotaxAutoscoutOption'
    EurotaxEquipment:
      description: Eurotax equipment.
      type: object
      properties:
        label:
          description: Eurotax equipment name in de, fr and it.
          allOf:
            - $ref: "#/components/schemas/Label"
        price:
          description: Price for the Eurotax equipment.
          type: number
          format: double
          minimum: 0.0
          maximum: 9999999.0
          example: 6540.0
          nullable: true
        id:
          description: Eurotax option's ID.
          type: number
          format: int64
          example: 1049983
        checked:
          description: Flag that indicates if Eurotax option is checked.
          type: boolean
          example: true
        groupId:
          description: Parent Eurotax option id for the package item, or null if it's not package item.
          type: number
          format: int64
          example: 4819592
          nullable: true
        isStandard:
          description: Flag that indicates if Eurotax option is standard.
          type: boolean
          example: true
    EurotaxEquipmentSetRequest:
      description: Represents the Eurotax request structure for setting the seller listing equipment.
      type: object
      properties:
        eurotaxEquipments:
          type: array
          description: List of equipment items provided in Eurotax format.
          items:
            $ref: '#/components/schemas/EurotaxEquipment'
      required:
        - eurotaxEquipments
    EurotaxAutoscoutOption:
      type: object
      description: Eurotax equipment option.
      properties:
        id:
          type: integer
          description: Eurotax equipment option's ID.
        packageItems:
          type: array
          description: Eurotax package items external ids included in the option. Empty list should be provided if there are no package items.
          items:
            type: number
            format: int64
      example:
        { "id": 423423, "packageItems": [ 423, 434 ] }
    ExtrasSearchAttributes:
      type: string
      description: Represents extra equipment features that can be searched for in a vehicle.
      enum:
        - availableForExchange
        - furnitureTransporter
        - handicappedAccessible
        - hasAdditionalSetOfTires
        - hasCrane
        - hasNewTires
        - hasRestrictorKit25Kw
        - hasRestrictorKit35Kw
        - hasTailLift
        - hasTarpaulin
        - hasWinch
        - racingVehicle
        - refrigerator
        - restrictorKit25KwApplicable
        - restrictorKit35KwApplicable
        - schoolBus
        - transporter
        - tuned
    Facet:
      type: string
      enum:
        - bodyColors
        - bodyTypes
        - conditionTypes
        - driveSystems
        - driveTypes
        - emissionStandards
        - energyLabels
        - equipmentSearchAttributes
        - equipmentSearchAttributeGroups
        - fuelTypes
        - hadNoAccidentOnly
        - handicappedAccessibleOnly
        - hasAdditionalSetOfTiresOnly
        - hasCraneOnly
        - hasNewTiresOnly
        - hasRestrictorKit25KwOnly
        - hasRestrictorKit35KwOnly
        - hasTailLiftOnly
        - hasTarpaulinOnly
        - hasWarrantyOnly
        - hasWinchOnly
        - inspectedOnly
        - interiorColors
        - licenseCategories
        - makeKeys
        - modelGroupKeys
        - modelKeys
        - racingVehicleOnly
        - transmissionTypeGroups
        - transmissionTypes
        - tunedOnly
        - vehicleCategories
      description: A list of possible facet categories used for filtering or sorting listings.
    FacetsResponse:
      type: object
      properties:
        facets:
          description: Retrieved facets.
          type: object
          additionalProperties:
            description: Facet name.
            type: object
            additionalProperties:
              description: Facet value.
              type: integer
              format: int64
      example: { "makeKeys": { "audi": 100, "bmw": 200 } }
      description: The response containing the facets retrieved, with each facet represented by its name and associated values.
    FastChargingPlugType:
      type: string
      enum:
        - ccs
        - ccs-2
        - chademo
        - supercharger
      description: A list of possible fast charging plug types supported by electric vehicles.
    Feature:
      type: string
      enum:
        - top-list
      description: A list of features available for filtering or categorizing listings, such as 'top-list' for featured listings.
    FinanceScout24Listing:
      properties:
        availableForLeasing:
          description: Flag indicating if the listing is available for leasing.
          type: boolean
          example: false
        bodyType:
          description: Shape of the vehicle body.
          allOf:
            - $ref: "#/components/schemas/BodyType"
          example: estate
        certificationNumber:
          description: Registration document number; in Swiss market known as Typenscheinnummer.
          type: string
          minLength: 6
          maxLength: 6
          pattern: '^\w{6}$'
          example: 1AE899
        cubicCapacity:
          description: Volume of the engine's cylinders in cubic centimeters.
          type: integer
          format: int32
          minimum: 1
          maximum: 29999
          example: 2995
        cylinders:
          description: Number of cylinders of the engine.
          type: integer
          format: int32
          minimum: 1
          maximum: 99
          example: 6
        doors:
          description: Number of doors of the vehicle.
          type: integer
          format: int32
          minimum: 1
          maximum: 9
          example: 5
        driveType:
          description: Drive type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/DriveType"
          example: all
        firstRegistrationDate:
          description: First registration date of the vehicle.
          type: string
          format: date
          example: '2020-12-15'
        firstRegistrationYear:
          description: Year when the vehicle was first registered.
          type: integer
          format: int32
          minimum: 1800
          maximum: 9999
          example: 2020
        fuelType:
          description: Fuel type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/FuelType"
          example: petrol
        id:
          description: Listing's ID.
          type: integer
          format: int64
          example: 1620023
        images:
          description: Listing images.
          type: array
          items:
            $ref: "#/components/schemas/Image"
        kiloWatts:
          description: Power the engine produces in kW.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 250
        listPrice:
          description: List price of the vehicle.
          type: number
          format: double
          minimum: 1.0
          maximum: 9999999.0
          example: 65400.0
        live:
          description: Flag indicating if a listing is live.
          type: boolean
          example: true
        makeKey:
          description: Unique key of the make.
          type: string
          minLength: 1
          maxLength: 64
          example: audi
        mileage:
          description: Distance in km that the vehicle has run.
          type: integer
          format: int32
          minimum: 0
          maximum: 99999999
          example: 17500
        modelKey:
          description: Key of the model (unique on the make level).
          type: string
          minLength: 1
          maxLength: 64
          example: a6
        price:
          description: Price of the vehicle.
          type: number
          format: double
          minimum: 1.0
          maximum: 9999999.0
          example: 47000
        seats:
          description: Number of seats of the vehicle.
          type: integer
          format: int32
          minimum: 1
          maximum: 199
          example: 5
        sellerId:
          description: Seller's ID.
          type: integer
          format: int64
          example: 1923
        transmissionType:
          description: Transmission type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/TransmissionType"
          example: automatic
        tuned:
          description: Flag indicating if the vehicle was altered to make it nicer or faster.
          type: boolean
          example: false
        vehicleCategory:
          description: Category of the vehicle.
          allOf:
            - $ref: "#/components/schemas/VehicleCategory"
          example: car
        versionFullName:
          description: The full name of the vehicle’s version, including model and specifications.
          type: string
          maxLength: 128
          example: A6 3.0 55 TFSI quattro S-Tronic
        versionId:
          description: Version ID of a listing.
          type: integer
          format: int64
          example: 100201
      description: A representation of a listing object from FinanceScout24 containing various attributes of the vehicle such as fuel type, body type, and pricing information.
    FuelType:
      type: string
      enum:
        - cng-petrol
        - diesel
        - electric
        - ethanol-petrol
        - hev-diesel
        - hev-petrol
        - hydrogen
        - lpg-petrol
        - mhev-diesel
        - mhev-petrol
        - petrol
        - phev-diesel
        - phev-petrol
        - two-stroke-mixture
      description: A list of possible fuel types that a vehicle can use.
    GeoLocation:
      description: Geo location.
      type: object
      properties:
        id:
          description: Geo location's ID.
          type: string
          example: geo-city-zurich
        type:
          description: Type of the geo location.
          type: string
          example: place
        name:
          description: Name of the geo location.
          type: string
          example: Zürich
    GeoLocationSearchResponse:
      description: Represents the response structure for a geo location search query, including pagination and result metadata.
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/GeoLocation"
        empty:
          description: Flag indicating if the search result contains no items.
          type: boolean
          example: false
        numberOfElements:
          description: Number of elements in the current page of search results.
          type: integer
          format: int32
          example: 1
        size:
          description: Total number of elements requested for the search query.
          type: integer
          format: int32
          example: 20
        totalElements:
          description: Total number of elements that match the provided search criteria across all pages.
          type: integer
          format: int64
          example: 1
        first:
          description: Flag indicating if the current page is the first page of the search results.
          type: boolean
          example: true
        last:
          description: Flag indicating if the current page is the last page of the search results.
          type: boolean
          example: true
        number:
          description: Current page number in the search result.
          type: integer
          format: int32
          example: 0
        totalPages:
          description: Total number of pages available for the given search criteria.
          type: integer
          format: int32
          example: 1
    Image:
      properties:
        url:
          description: URL of the image.
          type: string
          format: uri
          example: https://images.autoscout24.ch/853/11878853/0.jpg
      description: Represents an image, containing an absolute URL to the image file.
    Label:
      type: object
      description: Represents equipment name in de, fr and it.
      properties:
        de:
          type: string
          description: Equipment name in German.
          example: ABS, EBD elektronische Bremskraftverteilung
        fr:
          type: string
          description: Equipment name in French.
          example: ABS, EBD répartiteur électronique de la force de freinage
        it:
          type: string
          description: Equipment name in Italian.
          example: ABS, EBD ripartizione elettronica della forza frenante
    Language:
      type: string
      enum:
        - de
        - fr
        - it
      example: de
      description: The language used by the user, which can be German (de), French (fr), or Italian (it).
    LicenseCategory:
      type: string
      enum:
        - a
        - a1
        - a-
        - b
        - b1
        - c
        - c1
        - f
        - m
      description: A list of possible vehicle license categories based on the driver's license type.
    ListingBaseResponse:
      type: object
      properties:
        conditionType:
          description: Condition type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/ConditionType"
          example: demonstration
        consumption:
          $ref: "#/components/schemas/Consumption"
        features:
          description: Listing features.
          type: array
          items:
            $ref: "#/components/schemas/ListingFeature"
        firstRegistrationDate:
          description: First registration date of the vehicle.
          type: string
          format: date
          example: '2020-12-15'
        firstRegistrationYear:
          description: Year when the vehicle was first registered.
          type: integer
          format: int32
          example: 2020
        fuelType:
          description: Fuel type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/FuelType"
          example: petrol
        horsePower:
          description: Horsepower of the vehicle.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 199
        id:
          description: Listing's ID.
          type: integer
          format: int64
          example: 1620023
        images:
          description: Listing images.
          type: array
          items:
            $ref: "#/components/schemas/Image"
        kiloWatts:
          description: Power the engine produces in kW.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 250
        make:
          $ref: "#/components/schemas/Make"
        mileage:
          description: Distance in km that the vehicle has run.
          type: integer
          format: int32
          example: 17500
        model:
          $ref: "#/components/schemas/Model"
        previousPrice:
          description: Previous price of the vehicle.
          type: number
          example: 47000
        price:
          description: Price of the vehicle.
          type: number
          example: 45000
        qualiLogo:
          $ref: "#/components/schemas/QualiLogo"
        range:
          description: Range of the vehicle in km.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 650
        seller:
          $ref: "#/components/schemas/ListingBaseResponse_Seller"
        teaser:
          description: Short description of the listing.
          type: string
          example: Awesome car!
        transmissionType:
          description: Transmission type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/TransmissionType"
          example: automatic
        vehicleCategory:
          description: Category of the vehicle.
          allOf:
            - $ref: "#/components/schemas/VehicleCategory"
          example: car
        versionFullName:
          description: Full version name of the vehicle.
          type: string
          example: A6 3.0 55 TFSI quattro S-Tronic
      description: The base response for vehicle listings, including key attributes such as fuel type, price, mileage, and more.
    ListingBaseResponse_Seller:
      type: object
      properties:
        city:
          description: The city where the seller is located.
          type: string
          example: "Zurich"
        id:
          description: Seller's ID.
          type: integer
          format: int64
          example: 1923
        name:
          description: Name of the seller.
          type: string
          example: "John Seller LLC"
        zipCode:
          description: Postal code of the seller's location.
          type: string
          example: "8080"
      description: Represents the data for a seller, including the seller's unique identifier.
    ListingCount:
      description: Represents the request structure for counting listings.
      type: object
      properties:
        query:
          $ref: '#/components/schemas/ListingQuery'
    ListingImage:
      type: object
      required:
        - id
        - key
        - url
      description: Image associated with a seller's listing.
      properties:
        id:
          type: integer
          format: int64
          description: Image's ID.
          example: 1201
        key:
          type: string
          description: Image storage key or reference.
          example: key1.jpg
        url:
          type: string
          description: Absolute URL of the image
          example: https://images.autoscout24.local/public/listing/key1.jpg
    ListingImageKey:
      type: object
      description: Image key used to associate an image with the listing.
      properties:
        key:
          type: string
          description: Image storage key.
      required:
        - key
      example:
        key: 101/1101/1.jpg
    ListingFeature:
      type: object
      properties:
        feature:
          description: Feature of the listing.
          allOf:
            - $ref: "#/components/schemas/Feature"
          example: top-listing
    ListingResponse:
      type: object
      properties:
        axis:
          description: Number of axles of the vehicle.
          type: integer
          format: int32
          minimum: 1
          maximum: 6
          example: 2
        batteryCapacity:
          description: Battery capacity in kWh.
          type: number
          format: double
          minimum: 1.0
          maximum: 999.0
          example: 150.55
        bodyColor:
          description: Color of the vehicle body.
          allOf:
            - $ref: "#/components/schemas/Color"
          example: blue
        bodyType:
          description: Shape of the vehicle body.
          allOf:
            - $ref: "#/components/schemas/BodyType"
          example: coupe
        boot:
          description: Boot dimensions.
          type: object
          properties:
            height:
              description: Height of the boot in mm.
              type: integer
              format: int32
              example: 120
            length:
              description: Length of the boot in mm.
              type: integer
              format: int32
              example: 250
            volume:
              description: Volume of the boot in liters.
              type: number
              format: double
              example: 800.55
            width:
              description: Width of the boot in cm.
              type: integer
              format: int32
              example: 150
        certificationNumber:
          description: Registration document number; in Swiss market known as Typenscheinnummer.
          type: string
          minLength: 6
          maxLength: 6
          pattern: '^\w{6}$'
          example: 1AE899
        chargingPlugType:
          description: Type of the charging plug.
          allOf:
            - $ref: "#/components/schemas/ChargingPlugType"
          example: type-1
        chargingPower:
          description: Charging power in kW.
          type: number
          format: double
          minimum: 1.0
          maximum: 199.0
          example: 2.15
        chargingTime0To100:
          description: Charging time from 0 to 100% in min.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 99
        chargingTime0To80:
          description: Charging time from 0 to 80% in min.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 72
        co2Emission:
          description: CO2 emission in g/km.
          type: integer
          format: int32
          minimum: 0
          maximum: 9999
          example: 42
        combustionEngineHorsePower:
          description: Horsepower of the combustion engine.
          type: integer
          format: int32
          minimum: 0
          maximum: 9999
          example: 150
        conditionType:
          description: Condition type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/ConditionType"
          example: demonstration
        consumption:
          description: Fuel consumption data for the vehicle.
          type: object
          properties:
            combined:
              description: Total fuel consumption in L/100km.
              type: number
              format: double
              example: 8.55
            extraUrban:
              description: Extra urban fuel consumption in L/100km.
              type: number
              format: double
              example: 6.55
            urban:
              description: Urban fuel consumption in L/100km.
              type: number
              format: double
              example: 10.55
        cubicCapacity:
          description: Volume of the engine's cylinders in cubic centimeters.
          type: integer
          format: int32
          minimum: 1
          maximum: 29999
          example: 2000
        cylinderArrangement:
          description: Arrangement of the cylinders.
          allOf:
            - $ref: "#/components/schemas/CylinderArrangement"
          example: v
        cylinders:
          description: Number of cylinders of the engine.
          type: integer
          format: int32
          minimum: 1
          maximum: 99
          example: 6
        description:
          description: Description of the listing.
          type: string
          example: Awesome car!
        directImport:
          description: Flag indicating if the vehicle was imported by the official seller.
          type: boolean
          example: true
        doors:
          description: Number of doors of the vehicle.
          type: integer
          format: int32
          minimum: 1
          maximum: 9
          example: 5
        driveSystem:
          description: Drive system of the vehicle.
          allOf:
            - $ref: "#/components/schemas/DriveSystem"
          example: belt
        driveType:
          description: Drive type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/DriveType"
          example: all
        electricMotorHorsePower:
          description: Horsepower of the electric motor.
          type: integer
          format: int32
          minimum: 0
          maximum: 9999
          example: 49
        emissionStandard:
          description: Emission standard of the vehicle.
          allOf:
            - $ref: "#/components/schemas/EmissionStandard"
          example: euro-6
        energyLabel:
          description: Energy label of the vehicle.
          allOf:
            - $ref: "#/components/schemas/EnergyLabel"
          example: a
        fastChargingPlugType:
          description: Type of the fast charging plug.
          allOf:
            - $ref: "#/components/schemas/FastChargingPlugType"
          example: ccs
        fastChargingPower:
          description: Fast charging power in kW.
          type: number
          format: double
          minimum: 1
          maximum: 999
          example: 50.55
        fastChargingTime0To100:
          description: Fast charging time from 0 to 100% in min.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 28
        fastChargingTime0To80:
          description: Fast charging time from 0 to 80% in min.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 23
        firstRegistrationDate:
          description: First registration date of the vehicle.
          type: string
          format: date
          example: '2020-12-15'
        firstRegistrationYear:
          description: Year when the vehicle was first registered.
          type: integer
          format: int32
          minimum: 1800
          maximum: 9999
          example: 2020
        fuelType:
          description: Fuel type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/FuelType"
          example: petrol
        furnitureTransporter:
          description: Flag indicating if a vehicle is a furniture transporter.
          type: boolean
          example: true
        gears:
          description: Number of gears of the vehicle.
          type: integer
          format: int32
          minimum: 1
          maximum: 99
          example: 6
        hadAccident:
          description: Flag indicating if a vehicle had an accident.
          type: boolean
          example: true
        hasAdditionalSetOfTires:
          description: Flag indicating if a vehicle has an additional set of tires.
          type: boolean
          example: true
        hasCrane:
          description: Flag indicating if a vehicle has a crane.
          type: boolean
          example: true
        hasNewTires:
          description: Flag indicating if a vehicle has new tires.
          type: boolean
          example: true
        hasTailLift:
          description: Flag indicating if a vehicle has a tail lift.
          type: boolean
          example: true
        hasTarpaulin:
          description: Flag indicating if a vehicle has a tarpaulin.
          type: boolean
          example: true
        hasWinch:
          description: Flag indicating if a vehicle has a winch.
          type: boolean
          example: true
        handicappedAccessible:
          description: Flag indicating if a vehicle is handicapped accessible.
          type: boolean
          example: true
        height:
          description: Height of the vehicle in mm.
          type: integer
          format: int32
          minimum: 1
          maximum: 29999
          example: 175
        horsePower:
          description: Horsepower of the vehicle.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 199
        id:
          description: Listing's ID.
          type: integer
          format: int64
          example: 1923
        images:
          description: Listing images.
          type: array
          items:
            $ref: "#/components/schemas/Image"
        inspected:
          description: Flag indicating if a vehicle was inspected.
          type: boolean
          example: true
        interiorColor:
          description: Color of the vehicle interior.
          allOf:
            - $ref: "#/components/schemas/Color"
          example: red
        kiloWatts:
          description: Power the engine produces in kW.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 250
        lastInspectionDate:
          description: Date of the last inspection.
          type: string
          format: date
          example: '2020-12-15'
        length:
          description: Length of the vehicle in mm.
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          example: 480
        licenseCategory:
          description: License category needed to operate the vehicle.
          allOf:
            - $ref: "#/components/schemas/LicenseCategory"
          example: b
        listPrice:
          description: List price of the vehicle.
          type: number
          format: double
          minimum: 1.0
          maximum: 9999999.0
          example: 65400.0
        make:
          $ref: "#/components/schemas/Make"
        metallic:
          description: Flag indicating if a vehicle has a metallic paint.
          type: boolean
          example: true
        mileage:
          description: Distance in km that the vehicle has run.
          type: integer
          format: int32
          minimum: 0
          maximum: 99999999
          example: 17500
        model:
          $ref: "#/components/schemas/Model"
        payload:
          description: Payload of the vehicle in kg.
          type: integer
          format: int32
          minimum: 1
          maximum: 29999
          example: 2000
        powerConsumption:
          description: Power consumption of the vehicle in kWh.
          type: number
          format: double
          minimum: 1.0
          maximum: 199.0
          example: 27.55
        previousPrice:
          description: Previous price of the vehicle.
          type: number
          format: double
          minimum: 1.0
          maximum: 9999999.0
          example: 55400
        price:
          description: Price of the vehicle.
          type: number
          format: double
          minimum: 1.0
          maximum: 9999999.0
          example: 47000
        racingVehicle:
          description: Flag indicating if a vehicle is a racing vehicle.
          type: boolean
          example: true
        qualiLogoId:
          description: Unique identifier of the Quali Logo.
          type: integer
          format: int64
          example: 1
        range:
          description: Range of the vehicle in km.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 650
        refrigerator:
          description: Flag indicating if a vehicle has a refrigerator.
          type: boolean
          example: true
        schoolBus:
          description: Flag indicating if a vehicle is a school bus.
          type: boolean
          example: true
        seats:
          description: Number of seats of the vehicle.
          type: integer
          format: int32
          minimum: 1
          maximum: 199
          example: 5
        sellerId:
          description: Unique identifier of the seller.
          type: integer
          format: int64
          example: 601
        sellerVehicleId:
          description: Unique identifier of the seller's vehicle.
          type: string
          example: SVID_123
        sleepingBerths:
          description: Number of sleeping berths of the vehicle.
          type: integer
          format: int32
          minimum: 1
          maximum: 9
          example: 1
        teaser:
          description: Teaser or highlight of the listing to capture interest.
          type: string
          example: NEW NEW NEW
        towingCapacityBraked:
          description: Towing capacity of the vehicle when braked, in kg.
          type: integer
          format: int32
          minimum: 1
          maximum: 99999
          example: 1000
        transmissionType:
          description: The type of transmission in the vehicle.
          allOf:
            - $ref: "#/components/schemas/TransmissionType"
          example: automatic
        transporter:
          description: A flag indicating whether the vehicle is designed as a transporter.
          type: boolean
          example: true
        tuned:
          description: A flag indicating whether the vehicle has been tuned for performance or aesthetics.
          type: boolean
          example: false
        vehicleCategory:
          description: Category of the vehicle.
          allOf:
            - $ref: "#/components/schemas/VehicleCategory"
          example: car
        versionFullName:
          description: The full name of the vehicle’s version, including model and specifications.
          type: string
          maxLength: 128
          example: A6 3.0 55 TFSI quattro S-Tronic
        warranty:
          description: Details about the vehicle’s warranty, including terms and conditions.
          type: object
          properties:
            details:
              description: A description of the specific warranty details.
              type: string
              example: Up to 10k
            duration:
              description: The duration of the warranty in months.
              type: integer
              format: int32
              minimum: 1
              maximum: 199
              example: 24
            mileage:
              description: The maximum mileage covered by the warranty in km.
              type: integer
              format: int32
              minimum: 1
              maximum: 9999999
              example: 10000
            startDate:
              description: The start date of the warranty in YYYY-MM-DD format.
              type: string
              format: date
              example: '2020-12-15'
            type:
              description: The type of warranty (e.g., from-date, from-mileage).
              allOf:
                - $ref: "#/components/schemas/WarrantyType"
              example: from-date
        weightCurb:
          description: The curb weight of the vehicle in kg, excluding passengers and cargo.
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          example: 2000
        weightTotal:
          description: The total weight of the vehicle in kg, including all components.
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          example: 2500
        width:
          description: The width of the vehicle in cm, typically measured at the widest point.
          type: integer
          format: int32
          minimum: 1
          maximum: 29999
          example: 180
    ListingEquipmentResponse:
      type: object
      properties:
        standard:
          type: array
          description: List of standard equipment of the vehicle.
          items:
            $ref: '#/components/schemas/Equipment'
          example:
            - name: "abs"
        optional:
          type: array
          description: List of optional equipment aof the vehicle.
          items:
            $ref: '#/components/schemas/Equipment'
          example:
            - name: "Assistance Package"
              packageItems:
                - name: "Adaptive Cruise Control"
        searchAttributes:
          type: array
          description: List of search attributes for filtering the vehicle equipment.
          items:
            $ref: '#/components/schemas/EquipmentSearchAttribute'
    ListingFacet:
      description: Defines a facet to retrieve for filtering or sorting purposes.
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Facet"
      example:
        { "name": "makeKeys" }
    ListingFacets:
      description: Represents the request structure for retrieving listing facets based on the provided search query.
      required:
        - facets
      type: object
      properties:
        query:
          $ref: '#/components/schemas/ListingQuery'
        facets:
          description: List of facets to retrieve for filtering or categorization.
          type: array
          items:
            $ref: '#/components/schemas/ListingFacet'
    ListingSearch:
      description: Represents the request structure for searching listings.
      type: object
      properties:
        query:
          $ref: '#/components/schemas/ListingQuery'
        pagination:
          $ref: "#/components/schemas/Pageable"
        sort:
          description: Sorting options for the listing search result.
          type: array
          items:
            $ref: "#/components/schemas/ListingSort"
    ListingSearchResponse:
      description: Represents the response structure for a listing search query, including pagination and result metadata.
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/ListingBaseResponse"
        empty:
          description: Flag indicating if the search result contains no items.
          type: boolean
          example: false
        numberOfElements:
          description: Number of elements in the current page of search results.
          type: integer
          format: int32
          example: 15
        size:
          description: Total number of elements requested for the search query.
          type: integer
          format: int32
          example: 20
        totalElements:
          description: Total number of elements that match the provided search criteria across all pages.
          type: integer
          format: int64
          example: 15
        first:
          description: Flag indicating if the current page is the first page of the search results.
          type: boolean
          example: true
        last:
          description: Flag indicating if the current page is the last page of the search results.
          type: boolean
          example: true
        number:
          description: Current page number in the search result.
          type: integer
          format: int32
          example: 0
        totalPages:
          description: Total number of pages available for the given search criteria.
          type: integer
          format: int32
          example: 1
    ListingSort:
      description: Defines the sorting criteria for the listing search results.
      required:
        - order
        - type
      type: object
      properties:
        type:
          description: Type of sorting to apply to the search results.
          type: string
          enum:
            - PRICE
            - MILEAGE
            - FIRST_REGISTRATION_DATE
            - MAKE_MODEL_A_Z
            - HORSE_POWER
            - CREATED_DATE
        order:
          description: Direction of the sorting order.
          type: string
          enum:
            - ASC
            - DESC
    ListingQuery:
      description: Represents the query parameters for filtering listings.
      type: object
      properties:
        ageFrom:
          description: Filter listings by age in days.
          type: integer
          format: int32
          example: 60
        batteryCapacityFrom:
          description: Filter listings by minimum battery capacity in kWh.
          type: number
          format: double
          example: 50.55
        batteryCapacityTo:
          description: Filter listings by maximum battery capacity in kWh.
          type: number
          format: double
          example: 150.55
        bodyColors:
          description: Filter listings by body colors.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Color'
          example: [ "blue", "white" ]
        bodyTypes:
          description: Filter listings by body types.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BodyType'
          example: [ "coupe", "suv" ]
        co2EmissionFrom:
          description: Filter listings by minimum CO₂ emission amount in g/km.
          type: integer
          format: int32
          example: 40
        co2EmissionTo:
          description: Filter listings by maximum CO₂ emission amount in g/km.
          type: integer
          format: int32
          example: 50
        conditionTypes:
          description: Filter listings by condition types.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ConditionType'
          example: [ "new", "used" ]
        consumptionCombinedFrom:
          description: Filter listings by minimum fuel consumption in liters/100km.
          type: number
          format: float
          example: 8.5
        consumptionCombinedTo:
          description: Filter listings by maximum fuel consumption in liters/100km.
          type: number
          format: float
          example: 8.6
        cubicCapacityFrom:
          description: Filter listings by minimum cubic capacity in cm³.
          type: integer
          format: int32
          example: 2000
        cubicCapacityTo:
          description: Filter listings by maximum cubic capacity in cm³.
          type: integer
          format: int32
          example: 3000
        cylindersFrom:
          description: Filter listings by minimum number of cylinders.
          type: integer
          format: int32
          example: 4
        cylindersTo:
          description: Filter listings by maximum number of cylinders.
          type: integer
          format: int32
          example: 6
        doorsFrom:
          description: Filter listings by minimum number of doors.
          type: integer
          format: int32
          example: 3
        doorsTo:
          description: Filter listings by maximum number of doors.
          type: integer
          format: int32
          example: 5
        driveSystems:
          description: Filter listings by drive systems.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DriveSystem'
          example: [ "belt", "chain" ]
        driveTypes:
          description: Filter listings by drive types.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DriveType'
          example: [ "rear", "all" ]
        emissionStandards:
          description: Filter listings by emission standard.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmissionStandard'
          example: [ "euro-5", "euro-6" ]
        energyLabels:
          description: Filter listings by energy efficiency label.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EnergyLabel'
          example: [ "a", "b" ]
        equipmentSearchAttributes:
          description: Filter listings by specific equipment attributes.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSearchAttribute'
          example: [ "abs", "air-condition", "adaptive-cruise-control" ]
        firstRegistrationDateFrom:
          description: Filter listings by the earliest first registration date.
          type: string
          format: date
          example: '2020-12-15'
        firstRegistrationDateTo:
          description: Filter listings by the latest first registration date.
          type: string
          format: date
          example: '2021-12-15'
        fuelTypes:
          description: Filter listings by fuel types.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FuelType'
          example: [ "electric", "petrol" ]
        geoLocation:
          $ref: '#/components/schemas/ListingQuery_GeoLocation'
        hadNoAccidentOnly:
          description: Flag indicating if the listing had no accident.
          type: boolean
          example: false
        hasWarrantyOnly:
          description: Flag indicating if the listing includes a warranty.
          type: boolean
          example: true
        horsePowerFrom:
          description: Filter listings by minimum horsepower.
          type: integer
          format: int32
          example: 150
        horsePowerTo:
          description: Filter listings by maximum horsepower.
          type: integer
          format: int32
          example: 250
        inspectedOnly:
          description: Flag indicating if the listing was inspected.
          type: boolean
          example: true
        interiorColors:
          description: Filter listings by interior colors.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Color'
          example: [ "red", "white" ]
        kiloWattsFrom:
          description: Filter listings by minimum power in kW.
          type: integer
          format: int32
          example: 40
        kiloWattsTo:
          description: Filter listings by maximum power in kW.
          type: integer
          format: int32
          example: 250
        licenseCategories:
          description: Filter listings by vehicle license categories.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LicenseCategory'
          example: [ "a", "c" ]
        makeModelVersions:
          description: Filter listings by specific make and model combinations.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ListingQuery_MakeModelVersion'
          example: [ { "makeKey": "bmw", "modelGroupKey": "3-series", "modelKey": "320d" } ]
        mileageFrom:
          description: Filter listings by minimum mileage in km.
          type: integer
          format: int32
          example: 10000
        mileageTo:
          description: Filter listings by maximum mileage in km.
          type: integer
          format: int32
          example: 50000
        priceFrom:
          description: Filter listings by minimum price.
          type: number
          format: double
          example: 10000
        priceTo:
          description: Filter listings by maximum price.
          type: number
          format: double
          example: 50000
        rangeFrom:
          description: Filter listings by minimum range in km.
          type: integer
          format: int32
          example: 500
        rangeTo:
          description: Filter listings by maximum range in km.
          type: integer
          format: int32
          example: 1000
        seatsFrom:
          description: Filter listings by minimum number of seats.
          type: integer
          format: int32
          example: 2
        seatsTo:
          description: Filter listings by maximum number of seats.
          type: integer
          format: int32
          example: 5
        sellerIds:
          description: Filter listings by seller IDs.
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
          example: [ 601 ]
        transmissionTypes:
          description: Filter listings by transmission types.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TransmissionType'
          example: [ "manual", "automatic-stepless" ]
        vehicleCategories:
          description: Filter listings by vehicle categories.
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/VehicleCategory"
          example: [ "car", "utility" ]
    ListingQuery_GeoLocation:
      description: Represents the geo location for querying listings based on seller's location.
      type: object
      properties:
        id:
          description: Geo location's ID.
          type: string
          example: geo-city-zurich
        radius:
          description: Radius of the geo location search.
          type: number
          format: double
          example: 32.5
    ListingQuery_MakeModelVersion:
      description: Represents the make and model version for querying.
      type: object
      properties:
        makeKey:
          type: string
          example: "bmw"
        modelGroupKey:
          type: string
          example: "3-series"
        modelKey:
          type: string
          example: "320d"
    Make:
      description: Represents the data for the Make entity.
      type: object
      properties:
        key:
          description: Unique key of the make.
          type: string
          example: "audi"
        name:
          description: Display name of the make.
          type: string
          example: "Audi"
    MakeResponse:
      allOf:
        - $ref: "#/components/schemas/Page"
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: "#/components/schemas/Make"
    MessageLead:
      description: Represents the request structure for a message lead.
      required:
        - email
        - firstName
        - lastName
        - message
        - phone
      type: object
      properties:
        email:
          description: Email address.
          maxLength: 255
          minLength: 0
          type: string
          example: info@autoscout24.ch
        firstName:
          description: First name.
          maxLength: 255
          minLength: 0
          type: string
          example: John
        lastName:
          description: Last name.
          maxLength: 255
          minLength: 0
          type: string
          example: Doe
        language:
          $ref: '#/components/schemas/Language'
        message:
          description: Message content.
          maxLength: 5000
          minLength: 0
          type: string
          example: I am interested in your car.
        phone:
          description: Phone number.
          maxLength: 32
          minLength: 0
          type: string
          example: +41761234567
    Model:
      description: Represents the data for the Model entity.
      type: object
      properties:
        key:
          description: Unique key of the model.
          type: string
          example: "a4-allroad"
        name:
          description: Display name of the model.
          type: string
          example: "A4 ALLROAD"
        group:
          $ref: "#/components/schemas/Model_ModelGroup"
    ModelResponse:
      allOf:
        - $ref: "#/components/schemas/Page"
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: "#/components/schemas/Model"
    Model_ModelGroup:
      type: object
      properties:
        key:
          description: Unique key of the model group.
          type: string
          example: "a-series"
        name:
          description: Display name of the model group.
          type: string
          example: "A Series"
    ObtainClientAccessToken:
      description: Represents the request structure for obtaining a client access token.
      required:
        - grant_type
        - client_id
        - client_secret
        - audience
      type: object
      properties:
        grant_type:
          description: Grant type.
          type: string
          example: "client_credentials"
        client_id:
          description: Client ID.
          type: string
        client_secret:
          description: Client secret.
          type: string
        audience:
          description: Audience.
          type: string
          example: "https://api.autoscout24.ch"
    ObtainClientAccessTokenResponse:
      description: Represents the response structure for obtaining a client access token.
      type: object
      properties:
        access_token:
          description: Access token.
          type: string
          example: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        token_type:
          description: Token type.
          type: string
          example: "Bearer"
        expires_in:
          description: Expiration of access token in seconds.
          type: integer
          format: int32
          example: 86400
    Option:
      type: object
      description: Equipment option.
      properties:
        id:
          type: integer
          description: Equipment option's ID.
        packageItems:
          type: array
          description: Package items included in the option.
          items:
            type: string
          nullable: true
      example:
        {
          "id": 1502,
          "packageItems": [
            "forfait-confort",
            "licht-fernlicht-assistent"
          ]
        }
    PackageItem:
      type: object
      properties:
        name:
          description: Name of the equipment item.
          type: string
          example: Adaptive Cruise Control
    Page:
      type: object
      properties:
        empty:
          description: Indicates if the page is empty.
          type: boolean
          example: false
        numberOfElements:
          description: Actual number of elements in a page.
          type: integer
          format: int32
          example: 18
        size:
          description: Size of a page.
          type: integer
          format: int32
          example: 20
        totalElements:
          description: Total number of elements.
          type: integer
          format: int64
          example: 138
        first:
          description: Indicates if it's the first page.
          type: boolean
          example: false
        last:
          description: Indicates if it's the last page.
          type: boolean
          example: true
        number:
          description: Page number.
          type: integer
          format: int32
          example: 6
        totalPages:
          description: Total number of pages.
          type: integer
          format: int32
          example: 7
    Pageable:
      description: Represents the pageable request.
      type: object
      properties:
        size:
          description: Number of elements in a page.
          type: integer
          format: int32
          example: 20
        page:
          description: Page number.
          type: integer
          format: int32
          example: 0
    Phone:
      description: Represents the data for the Phone entity.
      type: object
      properties:
        number:
          description: Phone number.
          type: string
          example: "+41761234567"
        type:
          description: Type of phone number.
          allOf:
            - $ref: "#/components/schemas/PhoneType"
          example: business
    PhoneType:
      description: Type of phone number.
      type: string
      enum:
        - business
        - car
        - fax
        - mobile
        - new-car
        - private
        - sales
        - showroom
        - twenty-four-hours-hotline
        - used-car
        - utility-vehicles
        - whats-app
    QualiLogo:
      description: Represents the data for the Quali Logo entity.
      type: object
      properties:
        id:
          description: Quali Logo's ID.
          type: integer
          format: int64
          example: 12
        imageUrl:
          description: URL of the image.
          type: string
          format: uri
          example: https://images.autoscout24.ch/qualilogos/12.svg
    QualiLogoResponse:
      description: Represents Quali Logo response.
      type: object
      properties:
        exchangePolicyPeriod:
          description: Number of days the exchange policy is valid.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 30
          nullable: true
        id:
          description: Quali Logo's ID.
          type: integer
          format: int64
          example: 12
        imageUrl:
          description: URL of the Quali Logo image.
          type: string
          format: uri
          example: https://images.autoscout24.ch/qualilogos/12.svg
        includedInPrice:
          description: Flag indicating if the Quali Logo is included in the vehicle's price.
          type: boolean
          example: true
        inspectionCheckedPoints:
          description: Number of checked points during inspection.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 100
          nullable: true
        benefits:
          description: List of benefits associated with the Quali Logo.
          type: array
          items:
            type: string
          example: [ "100 points check", "Extended warranty" ]
          nullable: true
        description:
          description: Description of the Quali Logo.
          type: string
          example: "This vehicle has been inspected by our experts."
        name:
          description: Name of the Quali Logo.
          type: string
          example: "AutoScout verified"
        url:
          description: URL pointing to more information about the Quali Logo.
          type: string
          example: "https://www.autoscout24.ch/de/s"
        returnPolicyPeriod:
          description: Return policy period in days.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 14
          nullable: true
        vehicleCategories:
          description: List of vehicle categories to which Quali Logo applies.
          type: array
          items:
            $ref: "#/components/schemas/VehicleCategory"
          example: [ "car", "utility" ]
        warranty:
          description: Details about the Quali Logo’s warranty.
          type: object
          nullable: true
          properties:
            coverage:
              description: Details of the warranty coverage.
              type: string
              example: "Engine, transmission, and drive"
            duration:
              description: Warranty duration in months.
              type: integer
              format: int16
              minimum: 1
              maximum: 9999
              example: 24
            mileage:
              description: Maximum mileage covered by the warranty in km.
              type: integer
              format: int64
              example: 10000
            minDuration:
              description: Flag indicating if the provided warranty duration is a minimum value rather than an exact duration.
              type: boolean
              example: true
    ReferenceDataResponse:
      description: Represents the reference data for vehicle attributes.
      type: object
      properties:
        bodyTypes:
          description: Vehicle body types.
          type: array
          items:
            $ref: "#/components/schemas/BodyType"
        conditionTypes:
          description: Vehicle condition types.
          type: array
          items:
            $ref: "#/components/schemas/ConditionType"
        colors:
          description: Vehicle colors.
          type: array
          items:
            $ref: "#/components/schemas/Color"
        driveSystems:
          description: Vehicle drive systems.
          type: array
          items:
            $ref: "#/components/schemas/DriveSystem"
        driveTypes:
          description: Vehicle drive types.
          type: array
          items:
            $ref: "#/components/schemas/DriveType"
        equipmentSearchAttributes:
          description: Vehicle equipment search attributes.
          type: array
          items:
            $ref: "#/components/schemas/EquipmentSearchAttribute"
        equipmentSearchAttributeGroups:
          description: Vehicle equipment search attribute groups.
          type: array
          items:
            $ref: "#/components/schemas/EquipmentSearchAttributeGroup"
        equipmentSearchAttributeGroupMapping:
          description: Mapping between EquipmentSearchAttribute and EquipmentSearchAttributeGroup.
          type: object
          additionalProperties:
            type: string
            nullable: true
          example:
            "xenon-headlights": "headlights"
        extrasSearchAttribute:
          description: Vehicle equipment extra search attributes.
          type: array
          items:
            $ref: "#/components/schemas/ExtrasSearchAttributes"
        fuelTypes:
          description: Vehicle fuel types.
          type: array
          items:
            $ref: "#/components/schemas/FuelType"
        licenseCategories:
          description: The required driving license categories needed to operate the vehicle.
          type: array
          items:
            $ref: "#/components/schemas/LicenseCategory"
        transmissionTypes:
          description: Vehicle transmission types.
          type: array
          items:
            $ref: "#/components/schemas/TransmissionType"
    SellerListingDetailsResponse:
      description: Represents a page of Listing entities.
      allOf:
        - $ref: "#/components/schemas/Page"
        - type: object
          properties:
            content:
              description: List of listing entries on the current page.
              type: array
              items:
                $ref: "#/components/schemas/SellerListingObject"
    SellerListingObject:
      type: object
      properties:
        id:
          description: Listing's ID.
          type: integer
          format: int64
          example: 1923
    SellerEquipmentResponse:
      description: Represents the response structure for returning seller listing equipment.
      type: object
      properties:
        standard:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentOption'
          example:
            - id: 1501
              name: "Matrix LED-Scheinwerfer"
              packageItems: null
            - id: 1502
              name: "Pack Assistenz Tour"
              packageItems:
                - "forfait-confort"
                - "licht-fernlicht-assistent"
        optional:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentOption'
          example:
            - id: 1503
              name: "Paket: Premiumpaket"
              packageItems: null
            - id: 1504
              name: "Sportsitze vorne"
              packageItems:
                - "heckklappe-automatisch"
                - "ferngesteuertes-parken"
        searchAttributes:
          type: array
          items:
            type: string
          example:
            - "abs"
            - "isofix"
    SellerSearch:
      description: Represents the request structure for searching sellers.
      type: object
      properties:
        query:
          $ref: '#/components/schemas/SellerQuery'
        pagination:
          $ref: "#/components/schemas/Pageable"
    SellerQuery:
      description: Represents the query parameters for filtering sellers.
      type: object
      properties:
        sellerIds:
          description: Filter sellers by seller IDs.
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
          example: [ 601 ]
    SellerSearchResponse:
      description: Represents a set of fields for Seller object.
      properties:
        id:
          description: Seller's ID.
          type: integer
          format: int64
          example: 1923
        name:
          description: Name of the seller.
          type: string
          example: "John Seller LLC"
    SellerResponse:
      description: Represents a set of fields for Seller object.
      properties:
        address:
          description: The address of the seller.
          type: string
          example: "Bahnhofstrasse 123b"
        city:
          description: The city where the seller is located.
          type: string
          example: "Zurich"
        id:
          description: Seller's ID.
          type: integer
          format: int64
          example: 1923
        name:
          description: Name of the seller.
          type: string
          example: "John Seller LLC"
        phone:
          description: Primary phone number of the seller.
          type: string
          example: "+41761234567"
        phones:
          description: All phone numbers associated with the seller.
          type: array
          items:
            $ref: "#/components/schemas/Phone"
        zipCode:
          description: Postal code of the seller's location.
          type: string
          example: "8080"
    SellerListing:
      description: Represents a set of fields for Seller's Listing objects.
      properties:
        availableForLeasing:
          description: Flag indicating if the listing is available for leasing.
          type: boolean
          example: false
        bodyType:
          description: Shape of the vehicle body.
          allOf:
            - $ref: "#/components/schemas/BodyType"
          example: estate
        certificationNumber:
          description: Registration document number; in Swiss market known as Typenscheinnummer.
          type: string
          minLength: 6
          maxLength: 6
          pattern: '^\w{6}$'
          example: 1AE899
        conditionType:
          description: Condition type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/ConditionType"
          example: demonstration
        cubicCapacity:
          description: Volume of the engine's cylinders in cubic centimeters.
          type: integer
          format: int32
          minimum: 1
          maximum: 29999
          example: 2995
        cylinders:
          description: Number of cylinders of the engine.
          type: integer
          format: int32
          minimum: 1
          maximum: 99
          example: 6
        doors:
          description: Number of doors of the vehicle.
          type: integer
          format: int32
          minimum: 1
          maximum: 9
          example: 5
        driveType:
          description: Drive type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/DriveType"
          example: all
        firstRegistrationDate:
          description: The date when the vehicle was first registered.
          type: string
          format: date
          example: '2020-12-15'
        firstRegistrationYear:
          description: The year when the vehicle was first registered.
          type: integer
          format: int32
          minimum: 1800
          maximum: 9999
          example: 2020
        fuelType:
          description: Fuel type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/FuelType"
          example: petrol
        id:
          description: Listing's ID.
          type: integer
          format: int64
          example: 1620023
        images:
          description: List of images associated with the listing.
          type: array
          items:
            $ref: "#/components/schemas/Image"
        kiloWatts:
          description: Power the engine produces in kW.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 250
        listPrice:
          description: List price of the vehicle.
          type: number
          format: double
          minimum: 1.0
          maximum: 9999999.0
          example: 65400.0
        live:
          description: Flag indicating if the listing is currently live.
          type: boolean
          example: true
        makeKey:
          description: Vehicle make key.
          type: string
          minLength: 1
          maxLength: 64
          example: audi
        mileage:
          description: The distance in km that the vehicle has been driven.
          type: integer
          format: int32
          minimum: 0
          maximum: 99999999
          example: 17500
        modelKey:
          description: Unique key for the model within the make.
          type: string
          minLength: 1
          maxLength: 64
          example: a6
        price:
          description: Current price of the vehicle.
          type: number
          format: double
          minimum: 1.0
          maximum: 9999999.0
          example: 47000
        seats:
          description: The number of seats in the vehicle.
          type: integer
          format: int32
          minimum: 1
          maximum: 199
          example: 5
        sellerId:
          description: Unique identifier for the seller of the listing.
          type: integer
          format: int64
          example: 601
        transmissionType:
          description: Transmission type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/TransmissionType"
          example: automatic
        tuned:
          description: Flag indicating if the vehicle has been tuned for better performance.
          type: boolean
          example: false
        vehicleCategory:
          description: Category of the vehicle.
          allOf:
            - $ref: "#/components/schemas/VehicleCategory"
          example: car
        versionFullName:
          description: The full name of the vehicle’s version, including model and specifications.
          type: string
          maxLength: 128
          example: A6 3.0 55 TFSI quattro S-Tronic
        versionId:
          description: Unique identifier for the version of the vehicle.
          type: integer
          format: int64
          example: 100201
    SellerListingPage:
      description: Represents a page of Listing entities.
      allOf:
        - $ref: "#/components/schemas/Page"
        - type: object
          properties:
            content:
              description: List of listing entries on the current page.
              type: array
              items:
                $ref: "#/components/schemas/SellerListing"
    Translation:
      description: Represents the response structure for translations.
      type: object
      properties:
        translations:
          description: Key value pairs of translations.
          type: object
          example: { "box": "Box", "box.type": "Box type" }
    TransmissionType:
      description: Type of transmission in the vehicle.
      type: string
      enum:
        - automatic
        - automatic-stepless
        - semi-automatic
        - manual
      example: automatic
    TransmissionTypeGroup:
      description: Transmission type group in the vehicle
      type: string
      enum:
        - automatic
        - manual
      example: automatic
    VehicleCategoriesResponse:
      type: object
      properties:
        vehicleCategories:
          description: List of retrieved vehicle categories.
          type: array
          items:
            $ref: '#/components/schemas/VehicleCategory'
    VehicleCategory:
      description: Represents the category or type of a vehicle.
      type: string
      enum:
        - car
        - utility
        - motorcycle
        - truck
        - camper
        - trailer
      example: car
    VehicleIdentificationNumberEquipmentResponse:
      description: Represents the response structure for get version equipment by vehicle identification number.
      allOf:
        - $ref: '#/components/schemas/VersionEquipmentResponse'
    VersionVehicleIdentificationNumberResponse:
      description: Represents the response structure for version by vehicle identification number search.
      properties:
        firstRegistrationMonth:
          type: integer
          format: int32
          example: 5
          description: Month of the vehicle's first registration.
        firstRegistrationYear:
          type: integer
          format: int32
          example: 2021
          description: Year of the vehicle's first registration.
        productionMonth:
          type: integer
          format: int32
          example: 3
          description: Month the vehicle was produced.
        productionYear:
          type: integer
          format: int32
          example: 2020
          description: Year the vehicle was produced.
        vehicleIdentificationNumber:
          type: string
          pattern: '^\w{17}$'
          description: Unique vehicle identification number (VIN).
          example: 1HGCM82633A123456
        version:
          description: Version object.
          allOf:
            - $ref: '#/components/schemas/VersionIdObject'
          example: 123456
    VersionBase:
      type: object
      description: Represents a base version of a vehicle with key specification details.
      properties:
        bodyType:
          description: Shape of the vehicle body.
          allOf:
            - $ref: "#/components/schemas/BodyType"
          example: estate
        certificationNumbers:
          type: array
          description: List of registration document numbers.
          items:
            type: string
            example: [ 1AE899, XYZ789 ]
        doors:
          type: integer
          format: int16
          description: Number of doors on the vehicle.
          minimum: 1
          maximum: 9
          example: 5
        driveType:
          description: Drive type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/DriveType"
          example: all
        fullName:
          type: string
          description: The full name of the vehicle’s version, including model and specifications.
          maxLength: 128
          example: A6 3.0 55 TFSI quattro S-Tronic
        horsePower:
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          description: Horsepower of the vehicle.
          example: 150
        id:
          type: integer
          format: int64
          description: Version's ID.
          example: 1234567
        kiloWatts:
          description: Power the engine produces in kW.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 250
        vehicleCategory:
          description: Category of the vehicle.
          allOf:
            - $ref: "#/components/schemas/VehicleCategory"
          example: car
        seats:
          type: integer
          format: int16
          minimum: 1
          maximum: 199
          description: Number of seats in the vehicle.
          example: 5
        transmissionType:
          description: Transmission type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/TransmissionType"
          example: automatic
    VersionBaseListResponse:
      description: Represents the response structure for versions returned by the configurator.
      allOf:
        - $ref: "#/components/schemas/Page"
        - type: object
          properties:
            content:
              description: List of version entries on the current page.
              type: array
              items:
                $ref: '#/components/schemas/VersionBase'
    VersionEquipmentOption:
      type: object
      description: Equipment option with localized name and optional package items.
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Equipment option's ID.
          example: 1002
        name:
          type: string
          description: Localized display name of the equipment option.
          example: Pack Assistenz Tour
        packageItems:
          type: array
          nullable: true
          description: List of package items if part of a package, otherwise null.
          items:
            $ref: '#/components/schemas/VersionPackageItem'
    VersionEquipmentResponse:
      type: object
      description: Represents the equipment data for a specific version.
      properties:
        standard:
          type: array
          items:
            $ref: '#/components/schemas/VersionEquipmentOption'
        optional:
          type: array
          items:
            $ref: '#/components/schemas/VersionEquipmentOption'
    VersionIdentificationMethod:
      description: Represents the identification method of a version.
      type: string
      enum:
        - certification-number
        - make-model
        - serial-number
        - vehicle-identification-number
        - none
      example: make-model
    VersionIdObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
          description: Version's ID.
    VersionPackageItem:
      type: object
      description: Item included in an version equipment package.
      required:
        - standard
        - key
        - name
      properties:
        standard:
          type: boolean
          description: Whether the package item is standard or optional.
        key:
          type: string
          description: Identifier key for the package item.
        name:
          type: string
          description: Localized name of the package item.
      example:
        {
          "standard": true,
          "key": "adaptive-cruise-control",
          "name": "Adaptive Cruise Control"
        }
    VersionResponse:
      type: object
      description: Represents the version details response structure.
      properties:
        batteryCapacity:
          type: number
          format: double
          description: Battery capacity in kWh.
          example: 52.0
        bodyType:
          description: Shape of the vehicle body.
          allOf:
            - $ref: '#/components/schemas/BodyType'
          example: estate
        certificationNumbers:
          type: array
          items:
            type: string
          description: List of registration document numbers.
          example: [ 1AE899, XYZ789 ]
        chargingPlugType:
          description: Type of the charging plug.
          allOf:
            - $ref: "#/components/schemas/ChargingPlugType"
          example: type-1
        chargingPower:
          description: Charging power in kW.
          type: number
          format: double
          minimum: 1.0
          maximum: 199.0
          example: 11.0
        chargingTime0To100:
          description: Charging time from 0 to 100% in min.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 99
        chargingTime0To80:
          description: Charging time from 0 to 80% in min.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 72
        co2Emission:
          type: integer
          format: int16
          description: CO2 emissions in g/km.
          example: 120
        consumptionCombined:
          type: number
          format: double
          description: Combined fuel consumption in L/100km.
          example: 5.5
        consumptionExtraUrban:
          type: number
          format: double
          minimum: 0.1
          maximum: 999.0
          description: Extra urban fuel consumption in L/100km.
          example: 4.8
        consumptionUrban:
          type: number
          format: double
          minimum: 0.1
          maximum: 999.0
          description: Urban fuel consumption in L/100km.
          example: 6.4
        cubicCapacity:
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          description: Engine cubic capacity in cc.
          example: 1498
        cylinderArrangement:
          description: Arrangement of the cylinders.
          allOf:
            - $ref: '#/components/schemas/CylinderArrangement'
          example: v
        cylinders:
          type: integer
          format: int16
          minimum: 1
          maximum: 99
          description: Number of cylinders of the engine.
          example: 4
        doors:
          type: integer
          format: int16
          description: Number of doors on the vehicle.
          minimum: 1
          maximum: 9
          example: 5
        driveSystem:
          description: Drive system of the vehicle.
          allOf:
            - $ref: '#/components/schemas/DriveSystem'
          example: belt
        driveType:
          description: Drive type of the vehicle.
          allOf:
            - $ref: '#/components/schemas/DriveType'
          example: all
        emissionStandard:
          description: Emission standard of the vehicle.
          allOf:
            - $ref: '#/components/schemas/EmissionStandard'
          example: euro-6
        fastChargingPlugType:
          description: Type of the fast charging plug.
          allOf:
            - $ref: "#/components/schemas/FastChargingPlugType"
          example: ccs
        fastChargingPower:
          description: Fast charging power in kW.
          type: number
          format: double
          minimum: 1.0
          maximum: 999.0
          example: 50.55
        fastChargingTime0To100:
          description: Fast charging time from 0 to 100% in min.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 28
        fastChargingTime0To80:
          description: Fast charging time from 0 to 80% in min.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 23
        fuelType:
          description: Emission standard of the vehicle.
          allOf:
            - $ref: '#/components/schemas/FuelType'
          example: petrol
        fullName:
          type: string
          maxLength: 128
          description: The full name of the vehicle’s version, including model and specifications.
          example: A6 3.0 55 TFSI quattro S-Tronic
        gasConsumptionCombined:
          type: number
          format: double
          minimum: 0.1
          maximum: 99.0
          description: The combined gas consumption in L/100km.
          example: 4.3
        gasConsumptionExtraUrban:
          type: number
          format: double
          minimum: 0.1
          maximum: 99.0
          description: The extra-urban gas consumption in L/100km.
          example: 3.9
        gasConsumptionUrban:
          type: number
          format: double
          minimum: 0.1
          maximum: 99.0
          description: The urban gas consumption in L/100km.
          example: 5.1
        gears:
          type: integer
          format: int16
          minimum: 1
          maximum: 99
          description: Number of gears of the vehicle.
          example: 7
        height:
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          description: Height of the vehicle in mm.
          example: 1450
        horsePower:
          type: integer
          format: int16
          description: Horsepower of the vehicle.
          minimum: 1
          maximum: 9999
          example: 150
        hybridHorsePower:
          type: integer
          format: int16
          description: Combined hybrid system horsepower.
          example: 204
        hybridKiloWatts:
          type: integer
          format: int16
          description: Combined hybrid system power in kW.
          example: 150
        id:
          type: integer
          format: int64
          description: Version's ID.
          example: 123456
        kiloWatts:
          description: Power the engine produces in kW.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 250
        length:
          type: integer
          format: int16
          description: Length of the vehicle in mm.
          minimum: 1
          maximum: 29999
          example: 4280
        licenseCategory:
          description: License category needed to operate the vehicle.
          allOf:
            - $ref: '#/components/schemas/LicenseCategory'
          example: b
        listPrice:
          description: List price of the vehicle.
          type: number
          format: double
          minimum: 1.0
          maximum: 9999999.0
          example: 65400.0
        makeKey:
          type: string
          maxLength: 255
          description: Vehicle make key.
          example: audi
        modelKey:
          type: string
          maxLength: 255
          description: Vehicle model key.
          example: a6
        payload:
          type: integer
          format: int16
          description: Payload capacity in kg.
          example: 500
        powerConsumption:
          type: number
          format: double
          description: Electric power consumption in kWh/100km.
          example: 14.7
        productionEndDate:
          type: string
          format: date
          description: End date of production.
          example: 2024-09-30
        productionMonth:
          type: integer
          format: int16
          description: Month the vehicle was produced.
          example: 3
        productionStartDate:
          type: string
          format: date
          description: Start date of production.
          example: 2020-03-01
        productionYear:
          type: integer
          format: int16
          example: 2020
          description: Year the vehicle was produced.
        range:
          description: Range of the vehicle in km.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 650
        seats:
          type: integer
          format: int16
          minimum: 1
          maximum: 199
          description: Number of seats in the vehicle.
          example: 5
        towingCapacityBraked:
          description: Towing capacity of the vehicle when braked, in kg.
          type: integer
          format: int32
          minimum: 1
          maximum: 99999
          example: 1000
        transmissionType:
          description: Transmission type of the vehicle.
          allOf:
            - $ref: '#/components/schemas/TransmissionType'
          example: automatic
        vehicleCategory:
          description: Category of the vehicle.
          allOf:
            - $ref: '#/components/schemas/VehicleCategory'
          example: car
        weightCurb:
          description: The curb weight of the vehicle in kg, excluding passengers and cargo.
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          example: 2000
        weightTotal:
          description: The total weight of the vehicle in kg, including all components.
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          example: 2500
        wheelbase:
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          description: Distance between the front and rear axles in millimeters.
          example: 2700
        width:
          type: integer
          format: int16
          description: Width of the vehicle in mm.
          example: 1790
    VehicleEnergyEfficiencyRequest:
      description: Represents the request structure for detecting vehicle energy efficiency.
      properties:
        certificationNumber:
          type: string
          pattern: '^\w{6}$'
          description: Registration document number; in Swiss market known as Typenscheinnummer.
          example: 1AE899
        transmissionTypeGroup:
          description: Transmission type group of the vehicle.
          allOf:
            - $ref: "#/components/schemas/TransmissionTypeGroup"
          example: automatic
        serialNumber:
          type: string
          pattern: '^\d{3}\.\d{3}\.\d{3}$'
          description: Serial number of the vehicle; in Swiss market known as Stammnummer.
          example: 123.456.789
    VehicleEnergyEfficiencyResponse:
      description: Represents the vehicle energy efficiency response structure.
      properties:
        co2Emission:
          type: integer
          format: int16
          description: CO2 emissions in g/km.
          example: 120
        consumptionCombined:
          type: number
          format: double
          minimum: 0.1
          maximum: 999.0
          description: Combined fuel consumption in L/100km.
          example: 4.5
        energyLabel:
          description: Energy label of the vehicle.
          allOf:
            - $ref: "#/components/schemas/EnergyLabel"
          example: a
        powerConsumption:
          description: Power consumption of the vehicle in kWh.
          type: number
          format: double
          minimum: 0.1
          maximum: 199.0
          example: 27.55
    VersionShared:
      description: Represents a shared set of fields for different Version objects.
      properties:
        source:
          description: The source of the version data.
          allOf:
            - $ref: "#/components/schemas/VersionSource"
          example: eurotax
        externalId:
          description: External ID of the version, provided by a data provider as the key/identifier.
          type: string
          maxLength: 64
          example: "100200401"
    VersionSource:
      description: Represents the source of the version data.
      type: string
      enum:
        - eurotax
        - auto-i
      example: eurotax
    WarrantyType:
      description: Type of warranty.
      type: string
      enum:
        - from-date
        - from-delivery
        - first-registration
        - none
      example: from-date
    SellerListingImageUploadRequest:
      description: Represents the request structure for the single image upload.
      type: object
      required:
        - file
      properties:
        file:
          type: string
          format: binary
          description: Image file to be uploaded (png, jpeg, gif, webp).
    SellerListingImagesGetResponse:
      description: Represents the response structure for retrieving seller listing images.
      type: array
      items:
        $ref: '#/components/schemas/ListingImage'
    SellerListingImagesSetRequest:
      type: array
      items:
        $ref: '#/components/schemas/ListingImageKey'
    SellerListingSharedRequest:
      description: Represents the request structure for updating a listing.
      required:
        - bodyColor
        - bodyType
        - conditionType
        - firstRegistrationYear
        - price
        - warrantyType
      type: object
      properties:
        availableForExchange:
          type: boolean
          description: Indicates if the vehicle is available for exchange.
          example: true
        availableForLeasing:
          type: boolean
          description: Indicates if the vehicle is available for leasing.
          example: false
        axis:
          type: integer
          format: int16
          minimum: 1
          maximum: 6
          description: Number of axles.
          example: 2
        batteryCapacity:
          type: number
          format: double
          minimum: 0.1
          maximum: 999.0
          description: Battery capacity in kWh.
          example: 75.0
        batteryHealthPercentage:
          type: number
          format: double
          minimum: 0.0
          maximum: 100.0
          description: Battery health percentage.
          example: 90.0
        batteryRentPrice:
          type: number
          format: double
          minimum: 0.1
          maximum: 999.0
          description: Battery rent price.
          example: 50.0
        bodyColor:
          description: Color of the vehicle body.
          allOf:
            - $ref: '#/components/schemas/Color'
          example: blue
        bodyColorText:
          type: string
          maxLength: 64
          description: Additional text for body color.
          example: Metallic Blue
        bodyType:
          description: Shape of the vehicle body.
          allOf:
            - $ref: "#/components/schemas/BodyType"
          example: estate
        bootHeight:
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          description: Boot height in mm.
          example: 600
        bootLength:
          type: integer
          format: int16
          minimum: 1
          maximum: 20000
          description: Boot length in mm.
          example: 1200
        bootVolume:
          type: number
          format: double
          minimum: 0.1
          maximum: 9999.0
          description: Boot volume in liters.
          example: 450.5
        bootWidth:
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          description: Boot width in mm.
          example: 800
        certificationNumber:
          type: string
          pattern: '^\w{6}$'
          description: Registration document number; in Swiss market known as Typenscheinnummer.
          example: 1AE899
        chargingPlugType:
          description: Type of the charging plug.
          allOf:
            - $ref: "#/components/schemas/ChargingPlugType"
          example: type-1
        chargingPower:
          type: number
          format: double
          minimum: 0.1
          maximum: 199.0
          description: Charging power in kW.
          example: 50.0
        chargingTime0To100:
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          description: Time to charge from 0 to 100% in minutes.
          example: 600
        chargingTime0To80:
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          description: Time to charge from 0 to 80% in minutes.
          example: 450
        co2Emission:
          type: integer
          format: int16
          minimum: 0
          maximum: 9999
          description: CO2 emission in g/km.
          example: 120
        combustionEngineHorsePower:
          type: integer
          format: int16
          minimum: 0
          maximum: 9999
          description: Horsepower of the combustion engine.
          example: 150
        conditionType:
          description: Condition type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/ConditionType"
          example: demonstration
        consumptionCombined:
          type: number
          format: double
          minimum: 0.1
          maximum: 999.0
          description: Combined fuel consumption in L/100km.
          example: 4.5
        consumptionExtraUrban:
          type: number
          format: double
          minimum: 0.1
          maximum: 999.0
          description: Extra urban fuel consumption in L/100km.
          example: 4.0
        consumptionUrban:
          type: number
          format: double
          minimum: 0.1
          maximum: 999.0
          description: Urban fuel consumption in L/100km.
          example: 5.2
        cubicCapacity:
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          description: Engine cubic capacity in cc.
          example: 1600
        cylinderArrangement:
          description: Arrangement of the cylinders.
          allOf:
            - $ref: "#/components/schemas/CylinderArrangement"
          example: v
        cylinders:
          type: integer
          format: int16
          minimum: 1
          maximum: 99
          description: Number of cylinders of the engine.
          example: 4
        description:
          type: string
          maxLength: 9999
          description: Short description of the vehicle (subtitle).
          example: Car in a perfect shape! Great equipment, warranty and much more...
        directImport:
          description: Flag that indicates whether the vehicle is a direct import, meaning it was imported outside the official Swiss distributor network.
          type: boolean
          example: true
        doors:
          type: integer
          format: int16
          minimum: 1
          maximum: 9
          description: Number of doors on the vehicle.
          example: 4
        driveSystem:
          description: Drive system of the vehicle.
          allOf:
            - $ref: "#/components/schemas/DriveSystem"
          example: belt
        driveType:
          description: Drive type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/DriveType"
          example: all
        electricMotorHorsePower:
          description: Horsepower of the electric motor.
          type: integer
          format: int16
          minimum: 0
          maximum: 9999
          example: 49
        emissionStandard:
          description: Emission standard of the vehicle.
          allOf:
            - $ref: "#/components/schemas/EmissionStandard"
          example: euro-6
        energyLabel:
          description: Energy label of the vehicle.
          allOf:
            - $ref: "#/components/schemas/EnergyLabel"
          example: a
        externalId:
          description: Listing's external ID, usually provided and used by a data provider as the listing's key/identificator in the origin system.
          type: string
          maxLength: 64
          example: 289D20046226
        fastChargingPlugType:
          description: Type of the fast charging plug.
          allOf:
            - $ref: "#/components/schemas/FastChargingPlugType"
          example: ccs
        fastChargingPower:
          description: Fast charging power in kW.
          type: number
          format: double
          minimum: 0.1
          maximum: 999.0
          example: 50.55
        fastChargingTime0To100:
          description: Fast charging time from 0 to 100% in minutes.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 28
        fastChargingTime0To80:
          description: Fast charging time from 0 to 80% in minutes.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 23
        firstRegistrationDate:
          type: string
          format: date
          description: First registration date of the vehicle.
          example: '2020-06-15'
        firstRegistrationYear:
          type: integer
          format: int16
          minimum: 1800
          maximum: 9999
          description: Year of first registration.
          example: 2020
        fuelType:
          description: Fuel type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/FuelType"
          example: petrol
        furnitureTransporter:
          description: Flag indicating if a vehicle is a furniture transporter.
          type: boolean
          example: true
        gasConsumptionCombined:
          type: number
          format: double
          minimum: 0.1
          maximum: 99.0
          description: The combined gas consumption in L/100km.
          example: 8.5
        gasConsumptionExtraUrban:
          type: number
          format: double
          minimum: 0.1
          maximum: 99.0
          description: The extra-urban gas consumption in L/100km.
          example: 6.5
        gasConsumptionUrban:
          type: number
          format: double
          minimum: 0.1
          maximum: 99.0
          description: The urban gas consumption in L/100km.
          example: 10.5
        gears:
          type: integer
          format: int16
          minimum: 1
          maximum: 99
          description: Number of gears of the vehicle.
          example: 6
        hadAccident:
          type: boolean
          description: Indicates if the vehicle has been in an accident.
          example: false
        handicappedAccessible:
          type: boolean
          description: Indicates if the vehicle is equipped for handicapped accessibility.
          example: true
        hasAdditionalSetOfTires:
          type: boolean
          description: Indicates if the vehicle includes an additional set of tires.
          example: true
        hasCrane:
          type: boolean
          description: Indicates if the vehicle has a crane attachment.
          example: false
        hasNewTires:
          type: boolean
          description: Indicates if the vehicle has new tires.
          example: true
        hasRestrictorKit25Kw:
          type: boolean
          description: Indicates if the vehicle has a 25kW restrictor kit installed.
          example: false
        hasRestrictorKit35Kw:
          type: boolean
          description: Indicates if the vehicle has a 35kW restrictor kit installed.
          example: false
        hasTailLift:
          type: boolean
          description: Indicates if the vehicle has a tail lift.
          example: false
        hasTarpaulin:
          type: boolean
          description: Indicates if the vehicle has a tarpaulin cover.
          example: false
        hasWinch:
          type: boolean
          description: Indicates if the vehicle is equipped with a winch.
          example: false
        height:
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          description: Vehicle height in mm.
          example: 1850
        horsePower:
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          description: Horsepower of the vehicle.
          example: 150
        inspected:
          description: Flag indicating if the vehicle has a valid vehicle technical inspection required by law - MFK.
          type: boolean
          example: true
        interiorColor:
          description: Color of the vehicle interior.
          allOf:
            - $ref: "#/components/schemas/Color"
          example: blue
        interiorColorText:
          type: string
          maxLength: 64
          description: Additional text for interior color.
          example: Metallic Blue
        kiloWatts:
          description: Power the engine produces in kW.
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          example: 250
        language:
          description: Primary language used for free text fields (description, teaser...).
          allOf:
            - $ref: '#/components/schemas/Language'
          example: de
        lastInspectionDate:
          description: Last inspection date of the vehicle (vehicle technical inspection required by law - MFK).
          type: string
          format: date
          example: '2020-12-15'
        length:
          description: Length of the vehicle in mm.
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          example: 480
        licenseCategory:
          description: License category needed to operate the vehicle.
          allOf:
            - $ref: "#/components/schemas/LicenseCategory"
          example: b
        listPrice:
          description: List price of the vehicle.
          type: number
          format: double
          minimum: 1.0
          maximum: 9999999.0
          example: 65400.0
        metallic:
          description: Flag indicating if a vehicle has a metallic paint.
          type: boolean
          example: true
        mileage:
          type: integer
          format: int32
          minimum: 0
          maximum: 99999999
          description: Vehicle mileage in km.
          example: 50000
        payload:
          description: Payload of the vehicle in kg.
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          example: 2000
        powerConsumption:
          description: Power consumption of the vehicle in kWh.
          type: number
          format: double
          minimum: 0.1
          maximum: 199.0
          example: 27.55
        price:
          type: number
          format: double
          minimum: 0.1
          maximum: 9999999.0
          description: Vehicle price in currency units.
          example: 35000.00
        racingVehicle:
          description: Flag indicating if a vehicle is a racing vehicle.
          type: boolean
          example: true
        range:
          description: Range of the vehicle in km.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 650
        refrigerator:
          description: Flag indicating if a vehicle has a refrigerator.
          type: boolean
          example: true
        restrictorKit25KwApplicable:
          type: boolean
          description: Indicates if a 25kW restrictor kit can be applied to the vehicle.
          example: false
        restrictorKit35KwApplicable:
          type: boolean
          description: Indicates if a 35kW restrictor kit can be applied to the vehicle.
          example: false
        schoolBus:
          type: boolean
          description: Indicates if the vehicle is classified as a school bus.
          example: false
        seats:
          type: integer
          format: int16
          minimum: 1
          maximum: 199
          description: Number of seats in the vehicle.
          example: 5
        sellerVehicleId:
          type: string
          maxLength: 64
          description: Unique identifier assigned by the seller to the vehicle (Wagen-Nr.).
          example: A123XYZ
        serialNumber:
          type: string
          pattern: '^\d{3}\.\d{3}\.\d{3}$'
          description: Serial number of the vehicle; in Swiss market known as Stammnummer.
          example: 123.456.789
        sleepingBerths:
          type: integer
          format: int16
          minimum: 1
          maximum: 9
          description: Number of sleeping berths in the vehicle.
          example: 4
        teaser:
          type: string
          maxLength: 999
          description: Short promotional text or teaser for the vehicle listing.
          example: "Limited edition Audi a6!"
        towingCapacityBraked:
          description: Towing capacity of the vehicle when braked, in kg.
          type: integer
          format: int32
          minimum: 1
          maximum: 99999
          example: 1000
        transmissionType:
          description: Transmission type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/TransmissionType"
          example: automatic
        transmissionTypeGroup:
          description: Transmission type group of the vehicle.
          allOf:
            - $ref: "#/components/schemas/TransmissionTypeGroup"
          example: automatic
        transporter:
          description: A flag indicating whether the vehicle is designed as a transporter.
          type: boolean
          example: true
        tuned:
          description: Flag indicating if the vehicle has been tuned for better performance.
          type: boolean
          example: false
        vehicleIdentificationNumber:
          type: string
          pattern: '^\w{17}$'
          description: Unique vehicle identification number (VIN).
          example: 1HGCM82633A123456
        versionFullName:
          description: The full name of the vehicle’s version, including model and specifications.
          type: string
          maxLength: 128
          example: A6 3.0 55 TFSI quattro S-Tronic
        versionId:
          description: Unique identifier for the version of the vehicle.
          type: integer
          format: int64
          example: 100201
        warrantyDetails:
          type: string
          maxLength: 1999
          description: Details of the warranty.
          example: "5-year manufacturer warranty."
        warrantyDuration:
          type: integer
          format: int16
          minimum: 1
          maximum: 199
          description: Duration of the vehicle warranty in months.
          example: 24
        warrantyMileage:
          type: integer
          format: int32
          minimum: 1
          maximum: 9999999
          description: Maximum mileage in km covered under warranty.
          example: 100000
        warrantyStartDate:
          type: string
          format: date
          description: Start date of the vehicle warranty.
          example: "2024-01-01"
        warrantyType:
          description: The type of warranty.
          allOf:
            - $ref: "#/components/schemas/WarrantyType"
          example: from-date
        weightCurb:
          description: The curb weight of the vehicle in kg, excluding passengers and cargo.
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          example: 2000
        weightTotal:
          description: The total weight of the vehicle in kg, including all components.
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          example: 2500
        wheelbase:
          type: integer
          format: int16
          minimum: 1
          maximum: 9999
          description: Distance between the front and rear axles in millimeters.
          example: 2700
        width:
          description: The width of the vehicle in centimeters, typically measured at the widest point.
          type: integer
          format: int16
          minimum: 1
          maximum: 29999
          example: 180
    SellerListingCreateRequest:
      allOf:
        - $ref: '#/components/schemas/SellerListingSharedRequest'
      description: Request to create a new seller listing.
      required:
        - makeKey
        - modelKey
        - vehicleCategory
        - versionIdentificationMethod
      properties:
        makeKey:
          type: string
          maxLength: 255
          description: Vehicle make key.
          example: audi
        modelKey:
          type: string
          maxLength: 255
          description: Vehicle model key.
          example: a6
        vehicleCategory:
          description: Category of the vehicle.
          allOf:
            - $ref: "#/components/schemas/VehicleCategory"
          example: car
        versionIdentificationMethod:
          description: Identification method of the version.
          allOf:
            - $ref: "#/components/schemas/VersionIdentificationMethod"
          example: make-model
    SellerListingEquipmentSetRequest:
      description: Represents the request structure for setting the seller listing equipment.
      type: object
      properties:
        standard:
          type: array
          description: Standard equipment options.
          items:
            $ref: '#/components/schemas/Option'
          example:
            [ { "id": 1502, "packageItems": [ "forfait-confort", "licht-fernlicht-assistent" ] } ]
        optional:
          type: array
          description: Optional equipment options.
          items:
            $ref: '#/components/schemas/Option'
          example:
            [ { "id": 1504, "packageItems": [ "heckklappe-automatisch", "ferngesteuertes-parken" ] } ]
        searchAttributes:
          type: array
          description: Equipment search attributes.
          items:
            $ref: '#/components/schemas/EquipmentSearchAttribute'
          example:
            [ "abs", "isofix" ]
    SellerListingUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/SellerListingSharedRequest'
      description: Request to update an existing seller listing.
  securitySchemes:
    BearerAuth:
      bearerFormat: auth-scheme
      description: "Bearer HTTP authentication (Authorization: Bearer <access_token>)"
      scheme: bearer
      type: http
